{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/angular-material.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialog-details/dialog-details.component.ts","webpack:///src/app/dialog-details/dialog-details.component.html","webpack:///src/app/dialog-layer-preview/dialog-layer-preview.component.ts","webpack:///src/app/dialog-layer-preview/dialog-layer-preview.component.html","webpack:///src/app/dialog-legend/dialog-legend.component.ts","webpack:///src/app/dialog-legend/dialog-legend.component.html","webpack:///src/app/mapa/mapa.component.ts","webpack:///src/app/mapa/mapa.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/models/layer.ts","webpack:///src/models/linija.ts","webpack:///src/models/lml_linija_layera.ts","webpack:///src/models/lmm_tacka_layera.ts","webpack:///src/models/lmp_poligon_layera.ts","webpack:///src/providers/dialog.service.ts","webpack:///src/providers/event-emitter.service.ts","webpack:///src/providers/globalVars.ts","webpack:///src/providers/kategorija.service.ts","webpack:///src/providers/ko.service.ts","webpack:///src/providers/linije.service.ts","webpack:///src/providers/mlinije.service.ts","webpack:///src/providers/poligoni.service.ts","webpack:///src/providers/rasveta.service.ts","webpack:///src/providers/tacke.service.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AngularMaterialModule","imports","providers","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","$event","stopPropagation","AppComponent","storageMap","eventEmitter","kategorijaService","ngxService","dialogService","title","menuLayers","listaKat","currentKO","poruka1","poruka2","listaKO","idKO","sifraKO","nazivKO","rBrKO","centarx","centary","zoom","get","subscribe","katOpst","KOChange","emit","ls","getListaKat","getKategorije","lista","filter","kat","nadkateg","forEach","item","push","subkat","find","checkFromStorage","error","console","log","set","cl","layer","getLayer","checked","pojedinacnaKO","reloadLayer","layers","findIndex","l","JSON","stringify","extSubkat","checkFromStorageSubkat","checkFromStorageKat","collapsed","mlayer","startLoader","start","layerSwitch","preserveFitToBounds","filteri","f","searchstring","removeAllLayers","ml","listUnchecked","length","clickLayer","sk","ev","x","clientX","y","clientY","displayLayerPreview","displayLegend","selector","templateUrl","styleUrls","ngxUiLoaderConfig","bgsColor","bgsOpacity","bgsPosition","bgsSize","bgsType","blur","delay","fgsColor","fgsPosition","fgsSize","fgsType","gap","logoPosition","logoSize","masterLoaderId","overlayBorderRadius","overlayColor","pbColor","pbDirection","pbThickness","hasProgressBar","text","textColor","textPosition","maxTime","minTime","AppModule","IDBNoWrap","declarations","entryComponents","bootstrap","DialogDetailsComponent","dialogRef","data","detalji","Map","displayedColumns","parse","Object","k","key","value","DialogLayerPreviewComponent","layerPreviewChange","DialogLegendComponent","close","MapaComponent","tackeService","linijeService","mlinijeService","poligoniService","rasvetaService","selectedIdKO","KO","listaLmmTackaLayera","Array","listaLmlLinijaLayera","listaLmpPoligonLayera","rasvetaMarkers","disableClusteringAtZoom","loadedLayers","baseMaps","attribution","maxZoom","mymap","zoomSnap","zoomControl","setView","addTo","ko","panTo","setZoom","loadLayer","unloadLayer","changedLayerPreview","baseLayerControl","position","sizeModes","vrsta","getTacke","getPoligoni","getMLinije","getRasveta","tl","index","layerId","lmm","m","removeFrom","splice","stop","pl","lmp","p","ll","lml","clearLayers","stopLoader","lmmTackaLayera","lmmZaKO","getListaTacaka","tacka","lmmTacka","pripadaKO","fg","bounds","getBounds","flyToBounds","padding","geom","coordinates","setIcon","iconUrl","icon","iconSize","iconAnchor","divElement","document","createElement","pElement","innerHTML","info","bElement","addEventListener","dialog","open","appendChild","bindPopup","label","bindTooltip","permanent","direction","opacity","className","tooltip","lmlLinijaLayera","lmlZaKO","getListaMLinija","mlinija","coord","linija","strokeColor","strokeOpacity","strokeWeight","opis","lmlMlinija","setStyle","color","weight","lmpPoligonLayera","lmpZaKO","getListaPoligona","poligon","lmpPoligon","temena","paths","i","koord","fillColor","fillOpacity","getListaRasveteKO","listarasvete","removeRasveta","stub","dodajRasvetaMarkerNaMapu","rasveta","markerLatLng","snaga","marker","kolicina","snaga1","snaga2","snaga3","snaga4","visina","tipsijalice","addLayer","environment","production","bootstrapModule","err","Layer","enabledLegend","Linija","LmlLinijaLayera","LmmTackaLayera","LmpPoligonLayera","DialogService","legend","naziv","simboli","dialogConfig","bottom","right","width","hasBackdrop","params","left","providedIn","EventEmitterService","GlobalVars","baseURL","baseURL1","KategorijaService","http","globalVars","httpOptions","headers","pipe","KOService","listaKOUrl","KOUrl","append","LinijeService","listaUrl","res","rel","Math","abs","MLinijeService","filterUlica","PoligoniService","Accept","RasvetaService","kol","TackeService"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {  MatSliderModule } from '@angular/material/slider';\r\nimport {  MatInputModule } from '@angular/material/input';\r\n\r\n@NgModule({\r\n    imports: [\r\n        //   CommonModule,\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatSliderModule,\r\n    ],\r\n    exports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatSliderModule\r\n    ],\r\n    providers: [\r\n\r\n    ]\r\n})\r\n\r\nexport class AngularMaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MapaComponent } from './mapa/mapa.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/mapa', pathMatch: 'full' },\r\n  { path: 'mapa', component: MapaComponent },\r\n  { path: '**', redirectTo: '/mapa', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { KO } from 'src/models/ko';\r\nimport { MenuLayer } from 'src/models/menu_layer';\r\nimport { Layer } from 'src/models/layer';\r\nimport { Kategorija } from 'src/models/kategorija';\r\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\r\nimport { KategorijaService } from 'src/providers/kategorija.service';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { DialogService } from 'src/providers/dialog.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'GIS Vrbas';\r\n  menuLayers: MenuLayer[] = [];\r\n  listaKat: Kategorija[] = [];\r\n  currentKO = ' (Vrbas-grad)';\r\n  poruka1 = '';\r\n  poruka2 = '';\r\n\r\n  listaKO: KO[] = [\r\n    { idKO: 7, sifraKO: '013', nazivKO: 'Vrbas', rBrKO: 1, centarx: 45.57185, centary: 19.640113, zoom: 14 },\r\n    { idKO: 1, sifraKO: '003', nazivKO: 'Bačko Dobro Polje', rBrKO: 3, centarx: 45.500382, centary: 19.68927, zoom: 15 },\r\n    { idKO: 8, sifraKO: '025', nazivKO: 'Zmajevo', rBrKO: 4, centarx: 45.452394, centary: 19.688595, zoom: 15 },\r\n    { idKO: 4, sifraKO: '016', nazivKO: 'Ravno Selo', rBrKO: 5, centarx: 45.447693, centary: 19.62254, zoom: 15 },\r\n    { idKO: 3, sifraKO: '007', nazivKO: 'Kucura', rBrKO: 6, centarx: 45.520522, centary: 19.589556, zoom: 15 },\r\n    { idKO: 5, sifraKO: '012', nazivKO: 'Savino Selo', rBrKO: 7, centarx: 45.506154, centary: 19.522938, zoom: 15 },\r\n   ];\r\n\r\n\r\n  constructor(\r\n    public storageMap: StorageMap,\r\n    public eventEmitter: EventEmitterService,\r\n    private kategorijaService: KategorijaService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private dialogService: DialogService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.storageMap.get('KO').subscribe((katOpst: KO) => {\r\n      if (katOpst) {\r\n        this.eventEmitter.KOChange.emit(katOpst);\r\n        this.currentKO = ' (' + katOpst.nazivKO + ')';\r\n      }\r\n      this.storageMap.get('mnLayers').subscribe((ls: MenuLayer[]) => {\r\n        if (ls) {\r\n          this.menuLayers = ls;\r\n          // console.log('menuLayers: ' + JSON.stringify(this.menuLayers.length));\r\n        } else {\r\n          this.storageMap.delete('mnLayers').subscribe();\r\n        }\r\n        // console.log('okida');\r\n        this.getListaKat();\r\n      });\r\n    });\r\n  }\r\n\r\n  getListaKat() {\r\n    this.kategorijaService.getKategorije()\r\n      .subscribe(lista => {\r\n        //  console.log(JSON.stringify(lista));\r\n        this.listaKat = [];\r\n        lista.filter(kat => kat.nadkateg === 0)\r\n          .forEach(item => this.listaKat.push(item));\r\n        this.listaKat.forEach(kat => kat.subkat = []);\r\n        lista.filter(kat => kat.nadkateg !== 0)\r\n          .forEach(subkat => this.listaKat.find(kat => kat.id === subkat.nadkateg).subkat.push(subkat));\r\n        this.checkFromStorage();\r\n      },\r\n        error => console.log('Nema konekcije!  ' + error)\r\n        );\r\n  }\r\n\r\n  promeniKO(katOpst: KO) {\r\n    this.storageMap.set('KO', katOpst).subscribe();\r\n    this.eventEmitter.KOChange.emit(katOpst);\r\n    this.currentKO = ' (' + katOpst.nazivKO + ')';\r\n    this.menuLayers.forEach(cl => {\r\n      const layer = this.getLayer(cl.id);\r\n      if (cl.checked && layer.pojedinacnaKO) {\r\n        this.reloadLayer(layer);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLayer(id: number) {\r\n    let layer: Layer;\r\n    this.listaKat.forEach(kat => {\r\n      if (kat.layers.findIndex(l => l.id === id) > -1) {\r\n        layer = kat.layers.find(l => l.id === id);\r\n        console.log(JSON.stringify(layer));\r\n      } else {\r\n        kat.subkat.forEach(extSubkat => {\r\n          if (extSubkat.layers.findIndex(l => l.id === id) > -1) {\r\n            layer = extSubkat.layers.find(l => l.id === id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return layer;\r\n  }\r\n\r\n\r\n  checkFromStorage() {\r\n    this.listaKat.forEach(kat => kat.subkat.forEach(subkat => this.checkFromStorageSubkat(subkat)));\r\n    this.listaKat.forEach(kat => this.checkFromStorageKat(kat));\r\n  }\r\n\r\n  checkFromStorageSubkat(subkat: Kategorija) {\r\n    subkat.collapsed = true;\r\n    subkat.layers.forEach(l => {\r\n      const cl = this.menuLayers.find((mlayer: MenuLayer) => mlayer.id === l.id);\r\n      if (cl) {\r\n        l.checked = cl.checked;\r\n        if (l.checked) {\r\n          subkat.collapsed = false;\r\n        }\r\n      } else {\r\n        l.checked = false;\r\n        this.menuLayers.push({ id: l.id, checked: false });\r\n      }\r\n      if (l.checked) {\r\n        if (l.id === 4) {\r\n          this.ngxService.startLoader('rasveta');\r\n        } else {\r\n          this.ngxService.start();\r\n        }\r\n      }\r\n      this.eventEmitter.layerSwitch.emit(l);\r\n    });\r\n  }\r\n\r\n  checkFromStorageKat(kat: Kategorija) {\r\n    kat.collapsed = true;\r\n    kat.layers.forEach(l => {\r\n      const cl = this.menuLayers.find((mlayer: MenuLayer) => mlayer.id === l.id);\r\n      if (cl) {\r\n        l.checked = cl.checked;\r\n        if (l.checked) {\r\n          kat.collapsed = false;\r\n        }\r\n      } else {\r\n        l.checked = false;\r\n        this.menuLayers.push({ id: l.id, checked: false });\r\n      }\r\n      if (l.checked) {\r\n        if (l.id === 4) {\r\n          this.ngxService.startLoader('rasveta');\r\n        } else {\r\n          this.ngxService.start();\r\n        }\r\n      }\r\n      this.eventEmitter.layerSwitch.emit(l);\r\n    });\r\n    kat.subkat.forEach(subkat => {\r\n      if (!subkat.collapsed) {\r\n        kat.collapsed = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleCollapsed(kat: Kategorija) {\r\n    if (kat.collapsed) {\r\n      kat.collapsed = false;\r\n    } else {\r\n      kat.collapsed = true;\r\n    }\r\n  }\r\n\r\n  reloadLayer(layer: Layer) {\r\n    layer.checked = false;\r\n    this.eventEmitter.layerSwitch.emit(layer);\r\n    layer.checked = true;\r\n    this.eventEmitter.layerSwitch.emit(layer);\r\n  }\r\n\r\n  clickLayer(layer: Layer, preserveFitToBounds?: boolean) {\r\n    // console.log(\"layer: \" + JSON.stringify(layer));\r\n    if (layer.id === 4) {\r\n      this.ngxService.startLoader('rasveta');\r\n    } else {\r\n      this.ngxService.start();\r\n    }\r\n    layer.checked = !layer.checked;\r\n    if (layer.checked === false && layer.filteri) {\r\n      layer.filteri.forEach(f => f.searchstring = '');\r\n    }\r\n    if (preserveFitToBounds) {\r\n      layer.preserveFitToBounds = true;\r\n    } else {\r\n      layer.preserveFitToBounds = false;\r\n    }\r\n    // console.log('layer.checked:  ' + layer.checked);\r\n    if (!this.menuLayers) {\r\n      this.removeAllLayers();\r\n    }\r\n    const ml = this.menuLayers.find((mlayer: MenuLayer) => mlayer.id === layer.id);\r\n    // console.log(JSON.stringify(cl));\r\n    if (ml) {\r\n      ml.checked = layer.checked;\r\n    }\r\n    this.eventEmitter.layerSwitch.emit(layer);\r\n    this.storageMap.set('mnLayers', this.menuLayers).subscribe();\r\n    // console.log(\"menuLAyers: \" + localStorage.getItem(\"mnLayers\"));\r\n  }\r\n\r\n  checkAll(kat: Kategorija) {\r\n    const listUnchecked = kat.layers.filter(l => l.checked === false);\r\n    switch (listUnchecked.length) {\r\n      case 0:\r\n        kat.layers.forEach(l => {\r\n          this.clickLayer(l);\r\n        });\r\n        break;\r\n      case 1:\r\n        listUnchecked.forEach(l => {\r\n          this.clickLayer(l);  // if exist one uncheck, fit to bounds\r\n        });\r\n        break;\r\n      default:\r\n        listUnchecked.forEach(l => {\r\n          this.clickLayer(l, true);  // if exist more than one, not fit to bounds\r\n        });\r\n    }\r\n  }\r\n\r\n  removeAllLayers() {\r\n    this.menuLayers.forEach(ml => ml.checked = false);\r\n    this.storageMap.set('mnLayers', this.menuLayers).subscribe();\r\n    this.listaKat.forEach(kat => kat.layers.forEach(l => l.filteri.forEach(f => f.searchstring = '')));\r\n    this.listaKat.forEach(kat => kat.subkat.forEach(sk => sk.layers.forEach(l => l.filteri.forEach(f => f.searchstring = ''))));\r\n    this.checkFromStorage();\r\n  }\r\n\r\n  changeLayerPreview(ev, layer: Layer) {\r\n    const x = +ev.clientX;\r\n    const y = +ev.clientY;\r\n    this.dialogService.displayLayerPreview({ layer, x, y });\r\n  }\r\n\r\n  displayLegend(l: Layer) {\r\n    this.dialogService.displayLegend(l);\r\n  }\r\n\r\n}\r\n","<ngx-ui-loader></ngx-ui-loader>\r\n<ngx-ui-loader [loaderId]=\"'rasveta'\"></ngx-ui-loader>\r\n<mat-drawer-container>\r\n  <mat-drawer #sideNav mode=\"side\" opened=\"true\" >\r\n    <button mat-icon-button class=\"hideSideNavBtn\" (click)=\"sideNav.toggle()\">\r\n      <mat-icon>maximize</mat-icon>\r\n    </button>\r\n    <div class=\"meni-ko\">\r\n      <button mat-button [matMenuTriggerFor]=\"menuKO\">\r\n        <mat-icon>swap_horiz</mat-icon>promeni naselje {{currentKO}}\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <h4 matSubheader>\r\n        Izaberi slojeve:\r\n      </h4>\r\n      <mat-list (click)=\"$event.stopPropagation()\">\r\n        <ng-container *ngFor=\"let kat of listaKat\">\r\n          <h2 matSubheader>\r\n            <button mat-button (click)=\"toggleCollapsed(kat)\">\r\n              <mat-icon matListIcon *ngIf=\"!kat.collapsed && (kat.layers.length>0 || kat.subkat.length>0)\">\r\n                arrow_drop_up</mat-icon>\r\n              <mat-icon matListIcon *ngIf=\"kat.collapsed && (kat.layers.length>0 || kat.subkat.length>0)\">\r\n                arrow_drop_down_circle</mat-icon>\r\n              {{kat.opis}}\r\n            </button>\r\n            <button mat-icon-button *ngIf=\"!kat.collapsed && kat.layers.length>0\" (click)=\"checkAll(kat)\">\r\n              <mat-icon>\r\n                done_all</mat-icon>\r\n            </button>\r\n          </h2>\r\n          <mat-list *ngIf=\"!kat.collapsed\">\r\n            <ng-container *ngTemplateOutlet=\"listitem; context: {k: kat}\"></ng-container>\r\n          </mat-list>\r\n          <ng-container *ngIf=\"!kat.collapsed\">\r\n            <mat-list *ngFor=\"let subkat of kat.subkat\" class=\"subkat\">\r\n              <h3 matSubheader>\r\n                <button mat-button (click)=\"toggleCollapsed(subkat)\">\r\n                  <mat-icon *ngIf=\"!subkat.collapsed && subkat.layers.length>0\">arrow_drop_up</mat-icon>\r\n                  <mat-icon *ngIf=\"subkat.collapsed && subkat.layers.length>0\">arrow_drop_down_circle</mat-icon>\r\n                  {{subkat.opis}}\r\n                </button>\r\n                <button mat-icon-button *ngIf=\"!subkat.collapsed && subkat.layers.length>0\" (click)=\"checkAll(subkat)\">\r\n                  <mat-icon matListIcon>\r\n                    done_all</mat-icon>\r\n                </button>\r\n              </h3>\r\n              <mat-list *ngIf=\"!subkat.collapsed\">\r\n                <ng-container *ngTemplateOutlet=\"listitem; context: {k: subkat}\"></ng-container>\r\n              </mat-list>\r\n            </mat-list>\r\n          </ng-container>\r\n        </ng-container>\r\n      </mat-list>\r\n    </div>\r\n    <mat-menu #menuKO=\"matMenu\">\r\n      <button mat-menu-item *ngFor=\"let KO of listaKO\" (click)=\"promeniKO(KO)\">{{KO.nazivKO}}</button>\r\n    </mat-menu>\r\n    <div class=\"ukloni-slojeve\">\r\n      <button mat-button (click)=\"removeAllLayers()\">\r\n        <mat-icon>layers_clear</mat-icon>ukloni sve slojeve\r\n      </button>\r\n    </div>\r\n    <div class=\"ogranicenje\">\r\n      <p>\r\n        Podaci u GIS-u su orijentacioni\r\n      </p>\r\n      <p>\r\n        i nisu za službenu upotrebu.\r\n      </p>\r\n    </div>\r\n  </mat-drawer>\r\n  <mat-drawer-content class=\"sideNav.isOpen?mapa-container:mapa-container\">\r\n    <router-outlet>\r\n      <div class=\"showSideNavContainer\">\r\n        <button mat-raised-button *ngIf=\"!sideNav.opened\" class=\"showSideNavBtn\" (click)=\"sideNav.toggle()\">\r\n          <mat-icon>launch</mat-icon>\r\n        </button>\r\n      </div>\r\n    </router-outlet>\r\n\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n\r\n<ng-template #filter let-l='l'>\r\n  <div *ngFor=\"let filter of l.filteri\">\r\n    <button mat-button (click)=\"reloadLayer(l)\">\r\n      <mat-icon>filter_list</mat-icon>\r\n    </button>\r\n    <mat-form-field appearance=\"outline\" class=\"searchfield\">\r\n      <mat-label>{{filter.opis}}</mat-label>\r\n      <input matInput [(ngModel)]=\"filter.searchstring\" (keydown)=\"$event.stopPropagation()\"\r\n        (keyup.enter)=\"reloadLayer(l)\">\r\n    </mat-form-field>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #listitem let-k='k'>\r\n  <mat-list-item *ngFor=\"let l of k.layers\" style=\"font-size: small; height: fit-content; padding-bottom: 2px; padding-left: 10px\">\r\n    <div matLine class=\"mn-slojevi\">\r\n      <button mat-button (click)=\"clickLayer(l)\" class=\"btn-sloj\">\r\n        <mat-icon *ngIf=\"!l.checked\">check_box_outline_blank</mat-icon>\r\n        <mat-icon *ngIf=\"l.checked\">check_box</mat-icon>\r\n        {{l.naziv}}\r\n      </button>\r\n      <button  [disabled]=\"!(l.checked && l.fillColor)\"  [ngStyle]=\"{'opacity': !(l.checked && l.fillColor) ? '0' : '1'}\"\r\n      (click)=\"changeLayerPreview($event, l)\" class=\"btn-legend\" mat-button>\r\n      <mat-icon [ngStyle]=\"{'color': l.fillColor}\">brush</mat-icon>\r\n      </button> \r\n      <button  [disabled]=\"!(l.checked && l.legend)\"  [ngStyle]=\"{'opacity': !(l.checked && l.legend) ? '0' : '1'}\"\r\n      (click)=\"displayLegend(l)\" class=\"btn-legend\" mat-button>\r\n      <mat-icon>live_help</mat-icon>\r\n      </button>\r\n    </div>\r\n    <p matLine *ngIf=\"l.checked\">\r\n      <ng-container *ngTemplateOutlet=\"filter; context: {l: l}\"></ng-container>\r\n    </p>\r\n  </mat-list-item>\r\n</ng-template>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { MapaComponent } from './mapa/mapa.component';\r\nimport { StorageModule } from '@ngx-pwa/local-storage';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\r\nimport { KOService } from 'src/providers/ko.service';\r\nimport { TackeService } from 'src/providers/tacke.service';\r\nimport { PoligoniService } from 'src/providers/poligoni.service';\r\nimport { LinijeService } from 'src/providers/linije.service';\r\nimport { MLinijeService } from 'src/providers/mlinije.service';\r\nimport { RasvetaService } from 'src/providers/rasveta.service';\r\nimport { KategorijaService } from 'src/providers/kategorija.service';\r\nimport { GlobalVars } from 'src/providers/globalVars';\r\n\r\nimport { NgxUiLoaderModule, NgxUiLoaderConfig} from 'ngx-ui-loader';\r\nimport { DialogLegendComponent } from './dialog-legend/dialog-legend.component';\r\nimport { DialogDetailsComponent } from './dialog-details/dialog-details.component';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { DialogLayerPreviewComponent } from './dialog-layer-preview/dialog-layer-preview.component';\r\n\r\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\r\n  bgsColor: 'green',\r\n  bgsOpacity: 0.5,\r\n  bgsPosition: 'bottom-right',\r\n  bgsSize: 60,\r\n  bgsType: 'ball-spin',\r\n  blur: 5,\r\n  delay: 0.2,\r\n  fgsColor: '#17a11e',\r\n  fgsPosition: 'center-center',\r\n  fgsSize: 60,\r\n  fgsType: 'folding-cube',\r\n  gap: 24,\r\n  logoPosition: 'center-center',\r\n  logoSize: 120,\r\n  // \"logoUrl\": \"assets/imgs/logo.png\",\r\n  masterLoaderId: 'master',\r\n  overlayBorderRadius: '0',\r\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\r\n  pbColor: 'green',\r\n  pbDirection: 'ltr',\r\n  pbThickness: 3,\r\n  hasProgressBar: true,\r\n  text: 'Molimo sačekajte...',\r\n  textColor: '#FFFFFF',\r\n  textPosition: 'center-center',\r\n  maxTime: 0,\r\n  minTime: 0\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapaComponent,\r\n    DialogLegendComponent,\r\n    DialogDetailsComponent,\r\n    DialogLayerPreviewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    ColorPickerModule,\r\n    StorageModule.forRoot({\r\n      IDBNoWrap: true,\r\n    }),\r\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig)],\r\n    entryComponents: [DialogLegendComponent, DialogDetailsComponent, DialogLayerPreviewComponent],\r\n  providers: [\r\n    EventEmitterService,\r\n    KOService,\r\n    TackeService,\r\n    PoligoniService,\r\n    LinijeService,\r\n    MLinijeService,\r\n    RasvetaService,\r\n    KategorijaService,\r\n    GlobalVars\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-details',\r\n  templateUrl: './dialog-details.component.html',\r\n  styleUrls: ['./dialog-details.component.scss']\r\n})\r\nexport class DialogDetailsComponent implements OnInit {\r\n  detalji: Map<string, string> = new Map<string, string>();\r\n  lista: { key: string, value: string }[] = [];\r\n  displayedColumns: string[] = ['key', 'value'];\r\n\r\n  constructor(public dialogRef: MatDialogRef<DialogDetailsComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: string) {\r\n    try {\r\n      this.detalji = JSON.parse(data);\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    Object.keys(this.detalji).forEach(k => {\r\n      this.lista.push({ key: k, value: this.detalji[k] });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<mat-dialog-content>\r\n  <table mat-table [dataSource]=\"lista\" class=\"mat-elevation-z8\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"key\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <button mat-button [mat-dialog-close]=\"true\">\r\n          <mat-icon>keyboard_backspace</mat-icon>\r\n        </button>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.key}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"value\">\r\n      <th mat-header-cell *matHeaderCellDef> </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</mat-dialog-content>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Layer } from 'src/models/layer';\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\n\n@Component({\n  selector: 'app-dialog-layer-preview',\n  templateUrl: './dialog-layer-preview.component.html',\n  styleUrls: ['./dialog-layer-preview.component.scss']\n})\nexport class DialogLayerPreviewComponent implements OnInit {\n\n  constructor( public dialogRef: MatDialogRef<DialogLayerPreviewComponent>,\n               @Inject(MAT_DIALOG_DATA) public layer: Layer, public eventEmitter: EventEmitterService) { }\n\n  ngOnInit() {\n  }\n\n  changedLayerPreview() {\n     this.eventEmitter.layerPreviewChange.emit(this.layer);\n  }\n\n}\n","<h3>{{layer.naziv}}</h3>\n<div *ngIf=\"layer.fillColor\">\n    <h5>Boja sloja:</h5>\n    <input \n    [(colorPicker)]=\"layer.fillColor\" \n    [style.background]=\"layer.fillColor\" \n    (colorPickerSelect)=\"changedLayerPreview()\"/>\n</div>\n<div *ngIf=\"layer.fillOpacity\">\n    <h5>Prozirnost sloja:</h5>\n    <mat-slider\n    (change)=\"changedLayerPreview()\"\n    class=\"slider\"\n    [max]=\"1\"\n    [min]=\"0\"\n    [step]=\"0.05\"\n    [thumbLabel]=\"false\"\n    [tickInterval]=\"0.1\"\n    [(ngModel)]=\"layer.fillOpacity\">\n</mat-slider>\n</div>\n<div  *ngIf=\"layer.strokeColor\">\n   <h5>Boja ivica:</h5>\n    <input \n    [(colorPicker)]=\"layer.strokeColor\" \n    [style.background]=\"layer.strokeColor\" \n    (colorPickerSelect)=\"changedLayerPreview()\"/>\n</div>\n<div *ngIf=\"layer.strokeOpacity\">\n    <h5>Prozirnost ivica:</h5>\n    <mat-slider\n    (change)=\"changedLayerPreview()\"\n    class=\"slider\"\n    [max]=\"1\"\n    [min]=\"0\"\n    [step]=\"0.05\"\n    [thumbLabel]=\"false\"\n    [tickInterval]=\"0.1\"\n    [(ngModel)]=\"layer.strokeOpacity\">\n</mat-slider>\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-legend',\r\n  templateUrl: './dialog-legend.component.html',\r\n  styleUrls: ['./dialog-legend.component.scss']\r\n})\r\nexport class DialogLegendComponent implements OnInit {\r\n\r\n  constructor( public dialogRef: MatDialogRef<DialogLegendComponent>,\r\n               @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nePrikazuj() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{data.title}}</h2>\r\n<mat-list>\r\n    <mat-list-item *ngFor=\"let item of data.simboli\">\r\n        <img src=\"{{item.img}}\">{{\"  -  \" + item.tekst}}\r\n    </mat-list-item>\r\n</mat-list>\r\n<div class=\"actions\" mat-dialog-actions>\r\n    <button class=\"btn\" mat-stroked-button [mat-dialog-close]=\"false\">OK</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport 'leaflet-easyprint';\r\nimport { KO } from 'src/models/ko';\r\nimport { LmmTackaLayera } from 'src/models/lmm_tacka_layera';\r\nimport { LmlLinijaLayera } from 'src/models/lml_linija_layera';\r\nimport { LmpPoligonLayera } from 'src/models/lmp_poligon_layera';\r\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\r\nimport { Tacka } from 'src/models/tacka';\r\nimport { Linija } from 'src/models/linija';\r\nimport { Poligon } from 'src/models/poligon';\r\nimport { Rasveta } from 'src/models/rasveta';\r\nimport { TackeService } from 'src/providers/tacke.service';\r\nimport { MLinijeService } from 'src/providers/mlinije.service';\r\nimport { PoligoniService } from 'src/providers/poligoni.service';\r\nimport { RasvetaService } from 'src/providers/rasveta.service';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { DialogDetailsComponent } from '../dialog-details/dialog-details.component';\r\nimport { DialogService } from 'src/providers/dialog.service';\r\nimport { LinijeService } from 'src/providers/linije.service';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-mapa',\r\n  templateUrl: './mapa.component.html',\r\n  styleUrls: ['./mapa.component.scss']\r\n})\r\n\r\n\r\nexport class MapaComponent implements OnInit {\r\n  mymap: L.Map;\r\n  selectedIdKO = 7;\r\n  KO: KO = { idKO: 7, sifraKO: '013', nazivKO: 'Vrbas-grad', rBrKO: 1, centarx: 45.57185, centary: 19.640113, zoom: 14 };\r\n  listaKO: KO[];\r\n  layers: Array<Layer> = [];\r\n  errorMessage: string;\r\n  listaLmmTackaLayera: LmmTackaLayera[] = new Array<LmmTackaLayera>();\r\n  listaLmlLinijaLayera: LmlLinijaLayera[] = new Array<LmlLinijaLayera>();\r\n  listaLmpPoligonLayera: LmpPoligonLayera[] = new Array<LmpPoligonLayera>();\r\n  rasvetaMarkers = L.markerClusterGroup({ disableClusteringAtZoom: 18 });\r\n  loadedLayers: number[] = [];\r\n  baseLayerControl: L.Control;\r\n  baseMaps =\r\n    {\r\n      'Esri Topo':\r\n      L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\r\n        {\r\n          // tslint:disable-next-line:max-line-length\r\n          attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community'\r\n        }),\r\n      'Openstreet mapnik':\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          maxZoom: 19,\r\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }),\r\n      'Esri World Imaginary':\r\n        L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n          {\r\n            // tslint:disable-next-line:max-line-length\r\n            attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n          })\r\n    };\r\n\r\n  constructor(\r\n    private eventEmitter: EventEmitterService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private tackeService: TackeService,\r\n    private linijeService: LinijeService,\r\n    private mlinijeService: MLinijeService,\r\n    private poligoniService: PoligoniService,\r\n    private rasvetaService: RasvetaService,\r\n    private dialogService: DialogService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.mymap = L.map('lmapa', { zoomSnap: 0.2, zoomControl: false })\r\n      .setView(L.latLng(this.KO.centarx, this.KO.centary), this.KO.zoom);\r\n    this.baseMaps['Esri Topo'].addTo(this.mymap);\r\n    this.eventEmitter.KOChange.subscribe((ko: KO) => {\r\n      // console.log(JSON.stringify(ko));\r\n      this.KO = ko;\r\n      this.mymap.panTo(L.latLng(ko.centarx, ko.centary));\r\n      this.mymap.setZoom(ko.zoom);\r\n    });\r\n    this.eventEmitter.layerSwitch.subscribe((layer: Layer) => {\r\n      // console.log(\"Loading layer: \" + JSON.stringify(layer));\r\n      if (layer.checked) {\r\n        // console.log(JSON.stringify(layer.filteri));\r\n        this.loadLayer(layer);\r\n      } else {\r\n        // console.log(\"Unloading layer: \" + layer.id + \" , vrsta: \" + layer.vrsta);\r\n        this.unloadLayer(layer);\r\n      }\r\n    });\r\n    this.eventEmitter.layerPreviewChange.subscribe((layer: Layer) => {\r\n      this.changedLayerPreview(layer);\r\n    });\r\n    this.baseLayerControl = L.control.layers(this.baseMaps, {}).addTo(this.mymap);\r\n    L.control.zoom({\r\n      position: 'topright'\r\n    }).addTo(this.mymap);\r\n    L.easyPrint({\r\n      title: 'Štampanje',\r\n      position: 'topright',\r\n      sizeModes: ['A4Portrait', 'A4Landscape']\r\n  }).addTo(this.mymap);\r\n  }\r\n\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// Layers //////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  loadLayer(layer: Layer) {\r\n    switch (layer.vrsta) {\r\n      case 't':\r\n      case 'T':\r\n        this.getTacke(layer);\r\n        break;\r\n      case 'p':\r\n      case 'P':\r\n        this.getPoligoni(layer);\r\n        break;\r\n      case 'l':\r\n      case 'L':\r\n        this.getMLinije(layer);\r\n        break;\r\n      case 'r':\r\n      case 'R':\r\n        this.getRasveta(layer);\r\n        break;\r\n    }\r\n  }\r\n\r\n  unloadLayer(layer: Layer) {\r\n    switch (layer.vrsta) {\r\n      case 't':\r\n      case 'T':\r\n        this.listaLmmTackaLayera.forEach((tl, index) => {\r\n          if (tl.layerId === layer.id) {\r\n            tl.lmm.forEach(m => m.removeFrom(this.mymap));\r\n            this.listaLmmTackaLayera.splice(index, 1);\r\n            this.ngxService.stop();\r\n          }\r\n        });\r\n        break;\r\n      case 'p':\r\n      case 'P':\r\n        this.listaLmpPoligonLayera.forEach((pl, index) => {\r\n          if (pl.layerId === layer.id) {\r\n            pl.lmp.forEach(p => p.removeFrom(this.mymap));\r\n            this.listaLmpPoligonLayera.splice(index, 1);\r\n            this.ngxService.stop();\r\n          }\r\n        });\r\n        break;\r\n      case 'l':\r\n      case 'L':\r\n        this.listaLmlLinijaLayera.forEach((ll, index) => {\r\n          if (ll.layerId === layer.id) {\r\n            ll.lml.forEach(l => l.removeFrom(this.mymap));\r\n            this.listaLmlLinijaLayera.splice(index, 1);\r\n            this.ngxService.stop();\r\n          }\r\n        });\r\n        break;\r\n      case 'r':\r\n      case 'R':\r\n        this.rasvetaMarkers.clearLayers();\r\n        this.rasvetaMarkers.removeFrom(this.mymap);\r\n        this.ngxService.stopLoader('rasveta');\r\n        break;\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  ////// Tacke //////////////////////////////////////////////////////////////////////////////////////\r\n  getTacke(layer: Layer) {\r\n    const lmmTackaLayera = new LmmTackaLayera();\r\n    const lmmZaKO = [] as L.Marker[];\r\n    lmmTackaLayera.layerId = layer.id;\r\n    this.tackeService.getListaTacaka(layer, this.KO.idKO).subscribe(\r\n      lista => {\r\n        if (lista) {\r\n          lista.forEach(tacka => {\r\n            const lmmTacka = this.lmm(tacka);\r\n            lmmTackaLayera.lmm.push(lmmTacka);\r\n            if (!layer.preserveFitToBounds && this.tackeService.pripadaKO(tacka, this.KO)) {\r\n              lmmZaKO.push(lmmTacka);\r\n            }\r\n          }\r\n          );\r\n        }\r\n        this.listaLmmTackaLayera.push(lmmTackaLayera);\r\n        layer.checked = true;\r\n        this.ngxService.stop();\r\n        if (!layer.preserveFitToBounds && lmmZaKO.length > 0) {\r\n          const fg = new L.featureGroup(lmmZaKO);\r\n          const bounds = fg.getBounds() as L.bounds;\r\n          this.mymap.flyToBounds(bounds, { padding: [15, 15] });\r\n        }\r\n      });\r\n  }\r\n\r\n  lmm(tacka: Tacka) {\r\n    const lmm = L.marker([tacka.geom.coordinates[0], tacka.geom.coordinates[1]])\r\n      .setIcon(L.icon({ iconUrl: tacka.icon, iconSize: [16, 16], iconAnchor: [8, 16] })).addTo(this.mymap);\r\n    const divElement = document.createElement('div');\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = tacka.info;\r\n    pElement.innerHTML += '<br\\>';\r\n    pElement.innerHTML += '<br\\>';\r\n\r\n    if (tacka.detalji && tacka.detalji !== null) {\r\n      const bElement = document.createElement('button');\r\n      bElement.id = 'popup_button';\r\n      bElement.addEventListener('click',\r\n        () =>\r\n          this.dialogService.dialog.open(DialogDetailsComponent, {\r\n            // width: '250px',\r\n            data: tacka.detalji\r\n          })\r\n      );\r\n      bElement.innerHTML = 'Detaljno';\r\n      pElement.appendChild(bElement);\r\n    }\r\n    divElement.appendChild(pElement);\r\n    lmm.bindPopup(divElement);\r\n    if (tacka.label) {\r\n      lmm.bindTooltip(tacka.label, { permanent: true, direction: 'right',  opacity: '0.3', className: 'label' });\r\n    } else {\r\n      lmm.bindTooltip(tacka.tooltip, { opacity: 0.7 });\r\n    }\r\n    return lmm;\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// MLinije //////////////////////////////////////////////////////////////////////////////////////\r\n  getMLinije(layer: Layer) {\r\n    const lmlLinijaLayera = new LmlLinijaLayera();\r\n    const lmlZaKO = [] as L.Polyline[];\r\n    lmlLinijaLayera.layerId = layer.id;\r\n    this.mlinijeService.getListaMLinija(layer, this.KO.idKO).subscribe(\r\n      lista => {\r\n        if (lista) {\r\n          lista.forEach(mlinija => {\r\n            for (const coord of mlinija.geom.coordinates) {\r\n              const linija = new Linija();\r\n              linija.coordinates = coord;\r\n              linija.strokeColor = mlinija.strokeColor;\r\n              linija.strokeOpacity = mlinija.strokeOpacity;\r\n              linija.strokeWeight = mlinija.strokeWeight;\r\n              linija.opis = mlinija.opis;\r\n              linija.info = mlinija.info;\r\n              const lmlMlinija = this.lml(linija) as L.Polyline;\r\n              lmlLinijaLayera.lml.push(lmlMlinija);\r\n              if (!layer.preserveFitToBounds && this.linijeService.pripadaKO(linija, this.KO)) {\r\n                lmlZaKO.push(lmlMlinija);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.listaLmlLinijaLayera.push(lmlLinijaLayera);\r\n        layer.checked = true;\r\n        this.ngxService.stop();\r\n        if (!layer.preserveFitToBounds && lmlZaKO.length > 0) {\r\n          const fg = new L.featureGroup(lmlZaKO);\r\n          const bounds = fg.getBounds() as L.bounds;\r\n          this.mymap.flyToBounds(bounds, { padding: [15, 15] });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  lml(linija: Linija) {\r\n    let path: L.LatLng[] = new Array<L.LatLng>();\r\n    for (const coord of linija.coordinates) {\r\n      path.push(new L.LatLng(coord[0], coord[1]));\r\n    }\r\n    const lml = L.polyline(path);\r\n    if (linija.label) {\r\n      lml.bindTooltip(linija.label, { permanent: true, direction: 'center', opacity: '0.3', className: 'label' });\r\n    } else {\r\n      lml.bindTooltip(linija.opis);\r\n    }\r\n    lml.setStyle({\r\n      color: linija.strokeColor,\r\n      opacity: linija.strokeOpacity,\r\n      weight: linija.strokeWeight\r\n    }).addTo(this.mymap);\r\n    const divElement = document.createElement('div');\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = linija.info;\r\n    pElement.innerHTML += '<br\\>';\r\n    pElement.innerHTML += '<br\\>';\r\n\r\n    if (linija.detalji && linija.detalji !== null) {\r\n      const bElement = document.createElement('button');\r\n      bElement.id = 'popup_button';\r\n      bElement.addEventListener('click',\r\n        () =>\r\n          this.dialogService.dialog.open(DialogDetailsComponent, {\r\n            // width: '250px',\r\n            data: linija.detalji\r\n          })\r\n      );\r\n      bElement.innerHTML = 'Detaljno';\r\n      pElement.appendChild(bElement);\r\n    }\r\n    divElement.appendChild(pElement);\r\n    lml.bindPopup(divElement);\r\n    path = [];\r\n    return lml;\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// Poligoni //////////////////////////////////////////////////////////////////////////////////////\r\n  getPoligoni(layer: Layer) {\r\n    const lmpPoligonLayera = new LmpPoligonLayera();\r\n    lmpPoligonLayera.layerId = layer.id;\r\n    const lmpZaKO = [] as L.Polygon[];\r\n    this.poligoniService.getListaPoligona(layer, this.KO.idKO).subscribe(\r\n      lista => {\r\n        if (lista) {\r\n          lista.forEach(poligon => {\r\n            const lmpPoligon = this.lmp(poligon) as L.Polygon;\r\n            lmpPoligonLayera.lmp.push(lmpPoligon);\r\n            if (!layer.preserveFitToBounds && this.poligoniService.pripadaKO(poligon, this.KO)) {\r\n              lmpZaKO.push(lmpPoligon);\r\n            }\r\n          });\r\n        }\r\n        this.listaLmpPoligonLayera.push(lmpPoligonLayera);\r\n        layer.checked = true;\r\n        this.ngxService.stop();\r\n        if (!layer.preserveFitToBounds && lmpZaKO.length > 0) {\r\n          const fg = new L.featureGroup(lmpZaKO);\r\n          const bounds = fg.getBounds() as L.bounds;\r\n          this.mymap.flyToBounds(bounds, { padding: [15, 15], maxZoom: 17 });\r\n        }\r\n      });\r\n  }\r\n\r\n  lmp(poligon: Poligon) {\r\n    let temena: L.LatLng[] = new Array<L.LatLng>();\r\n    let paths: L.LatLng[][] = new Array<L.LatLng[]>();\r\n    for (let i = 0; i < poligon.geom.coordinates.length; i++) {\r\n      poligon.geom.coordinates[+i].forEach(koord => {\r\n        temena.push(new L.LatLng(koord[0], koord[1]));\r\n      });\r\n      paths.push(temena);\r\n      temena = [];\r\n    }\r\n    const lmp = L.polygon(paths);\r\n    if (poligon.label) {\r\n      lmp.bindTooltip(poligon.label, { permanent: true, direction: 'center', opacity: '0.3', className: 'label' });\r\n    }\r\n    lmp.setStyle({\r\n      color: poligon.strokeColor,\r\n      opacity: poligon.strokeOpacity,\r\n      weight: poligon.strokeWeight,\r\n      fillColor: poligon.fillColor,\r\n      fillOpacity: poligon.fillOpacity\r\n    }).addTo(this.mymap);\r\n    const divElement = document.createElement('div');\r\n\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = poligon.info;\r\n    pElement.innerHTML += '<br\\>';\r\n    pElement.innerHTML += '<br\\>';\r\n\r\n    if (poligon.detalji && poligon.detalji !== null) {\r\n      const bElement = document.createElement('button');\r\n      bElement.id = 'popup_button';\r\n      bElement.addEventListener('click',\r\n        () =>\r\n          this.dialogService.dialog.open(DialogDetailsComponent, {\r\n            // width: '250px',\r\n            data: poligon.detalji\r\n          })\r\n      );\r\n      bElement.innerHTML = 'Detaljno';\r\n      pElement.appendChild(bElement);\r\n    }\r\n    divElement.appendChild(pElement);\r\n    lmp.bindPopup(divElement);\r\n    paths = [];\r\n\r\n    return lmp;\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// Rasveta //////////////////////////////////////////////////////////////////////////////////////\r\n  getRasveta(layer: Layer) {\r\n    this.rasvetaService.getListaRasveteKO(layer, this.KO.idKO).subscribe(\r\n      listarasvete => {\r\n        this.removeRasveta();\r\n        listarasvete.forEach(stub => this.dodajRasvetaMarkerNaMapu(stub));\r\n        this.rasvetaMarkers.addTo(this.mymap);\r\n        this.ngxService.stopLoader('rasveta');\r\n      });\r\n  }\r\n\r\n  dodajRasvetaMarkerNaMapu(rasveta: Rasveta) {\r\n    const markerLatLng = new L.LatLng(rasveta.geom.coordinates[0], rasveta.geom.coordinates[1]);\r\n    let info: string;\r\n    let snaga: string;\r\n    const marker = L.marker(markerLatLng)\r\n      .setIcon(L.icon({ iconUrl: this.rasvetaService.icon(rasveta.kolicina, 18) }));\r\n    if (rasveta.kolicina !== null) {\r\n      if (rasveta.snaga1 !== null) {\r\n        snaga = '' + rasveta.snaga1;\r\n        if (rasveta.snaga2 !== null) {\r\n          snaga = snaga + '+' + rasveta.snaga2;\r\n          if (rasveta.snaga3 !== null) {\r\n            snaga = snaga + '+' + rasveta.snaga3;\r\n            if (rasveta.snaga4 !== null) {\r\n              snaga = snaga + '+' + rasveta.snaga4;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // tslint:disable-next-line:max-line-length\r\n      info = 'Tip stuba: ' + rasveta.stub + ',<br> visina: ' + rasveta.visina + ',<br> tip sijalice: ' + rasveta.tipsijalice + '<br>' + 'w:' + snaga;\r\n    } else {\r\n      info = 'Tip stuba: ' + rasveta.stub + ', visina: ' + rasveta.visina;\r\n    }\r\n\r\n    const divElement = document.createElement('div');\r\n\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = info;\r\n    pElement.innerHTML += '<br\\>';\r\n    divElement.appendChild(pElement);\r\n    marker.bindPopup(divElement);\r\n    this.rasvetaMarkers.addLayer(marker);\r\n\r\n  }\r\n\r\n  removeRasveta() {\r\n    this.rasvetaMarkers.clearLayers();\r\n  }\r\n\r\n  changedLayerPreview(layer: Layer) {\r\n    switch (layer.vrsta) {\r\n      case 't':\r\n      case 'T':\r\n\r\n        break;\r\n      case 'p':\r\n      case 'P':\r\n        this.listaLmpPoligonLayera.find(l => l.layerId === layer.id).lmp.forEach(poligon => {\r\n          poligon.setStyle({\r\n            color: layer.strokeColor,\r\n            opacity: layer.strokeOpacity,\r\n            fillColor: layer.fillColor,\r\n            fillOpacity: layer.fillOpacity\r\n          });\r\n        });\r\n        break;\r\n      case 'l':\r\n      case 'L':\r\n\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.css\"\r\n  integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"\r\n  crossorigin=\"\"/>\r\n  <script src=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.js\"\r\n  integrity=\"sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og==\"\r\n  crossorigin=\"\"></script>\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css\" />\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css\" />\r\n\r\n\r\n<div id=\"lmapa\" class=\"lmapa\"></div>\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Filter } from './filter';\r\n\r\n\r\nexport class Layer {\r\nid: number;\r\nnaziv: string;\r\nvrsta: string;\r\nredosled: number;\r\npojedinacnaKO = false;\r\nlegend: string;\r\nchecked = false;\r\nfillColor: string;\r\nfillOpacity: number;\r\nstrokeColor: string;\r\nstrokeOpacity: number;\r\nfilteri: Filter[];\r\nenabledLegend = true;\r\npreserveFitToBounds = false;\r\n}\r\n","export class Linija {\r\ncoordinates: number[][];\r\nopis: string;\r\nstrokeColor: string;\r\nstrokeOpacity: number;\r\nstrokeWeight: number;\r\nlabel: string;\r\ninfo: string;\r\ndetalji: any;\r\n}\r\n","import { Polyline } from 'leaflet';\r\n\r\n// Leaflet map polygon\r\nexport class LmlLinijaLayera {\r\n layerId: number;\r\n lml: Polyline[] = [];\r\n}\r\n","import { Marker } from 'leaflet';\r\n\r\n// Leaflet map marker\r\nexport class LmmTackaLayera {\r\n    layerId: number;\r\n    lmm: Marker[] = [];\r\n}\r\n","import { Polygon } from 'leaflet';\r\n\r\n// Leaflet map polygon\r\nexport class LmpPoligonLayera {\r\n layerId: number;\r\n lmp: Polygon[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogLegendComponent } from 'src/app/dialog-legend/dialog-legend.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Layer } from 'src/models/layer';\r\nimport { DialogLayerPreviewComponent } from 'src/app/dialog-layer-preview/dialog-layer-preview.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  constructor(public dialog: MatDialog, protected storageMap: StorageMap) {\r\n\r\n  }\r\n\r\n  displayLegend(layer: Layer) {\r\n    if (layer.legend) {\r\n      try {\r\n        const data = { title: layer.naziv + ':', simboli: JSON.parse(layer.legend) };\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.position = {\r\n          bottom: '0',\r\n          right: '300'\r\n        };\r\n        dialogConfig.data = data;\r\n        dialogConfig.width = '250px';\r\n        dialogConfig.hasBackdrop = true;\r\n        this.dialog.open(DialogLegendComponent, dialogConfig);\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n\r\n  displayLayerPreview(params: {layer: Layer, x, y}) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.position = {\r\n      left: (+params.x + 30) + 'px'\r\n    };\r\n    dialogConfig.data = params.layer;\r\n    dialogConfig.width = '250px';\r\n    dialogConfig.hasBackdrop = true;\r\n    this.dialog.open(DialogLayerPreviewComponent, dialogConfig);\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventEmitterService {\r\n\r\n  constructor() { }\r\n\r\n  KOChange = new EventEmitter();\r\n  layerSwitch = new EventEmitter();\r\n  layerPreviewChange = new EventEmitter();\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GlobalVars {\r\n  // baseURL = 'http://localhost:8080';\r\n  // baseURL1 = 'http://localhost:8080';\r\n  // baseURL = 'https://vgis21.herokuapp.com';\r\n  // baseURL1 = 'https://vgis21.herokuapp.com';\r\n  // baseURL = 'http://79.101.21.143:8070/gis-vrbas-2.1.2';\r\n  // baseURL = 'https://93.87.76.62:8081';\r\n  // baseURL1 = 'http://192.168.69.21:8070/gis-vrbas-2.1.2'; // lokalna adresa\r\n  // baseURL1 = 'https://93.87.76.62:8081';\r\n   baseURL = 'https://www.vrbasgis.net:8080/gis-3.0.1';\r\n  // baseURL = 'https://93.87.76.62:8081';\r\n  baseURL1 =  'https://www.vrbasgis.net:8080/gis-3.0.1';// lokalna adresa\r\n  // baseURL1 = 'http://93.87.76.62:8080/gis-3.0.1';// lokalna adresa\r\n  // baseURL1 = 'https://93.87.76.62:8081';\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public setBaseURL(value: string) {\r\n    this.baseURL = value;\r\n  }\r\n\r\n  public getBaseURL(): string {\r\n    return this.baseURL;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Kategorija } from '../models/kategorija';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\n\r\n@Injectable()\r\nexport class KategorijaService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    getKategorije(): Observable<Kategorija[]> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            })\r\n            };\r\n        return this.http.get<Kategorija[]>(this.globalVars.baseURL + '/layers/kategorije',  httpOptions)\r\n            .pipe(retry(1), catchError(err => {\r\n                return this.http.get<Kategorija[]>(this.globalVars.baseURL1 + '/layers/kategorije',  httpOptions).pipe(retry(1));\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { KO } from '../models/ko';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\n\r\n\r\n@Injectable()\r\nexport class KOService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    getListaKO(): Observable<KO[]> {\r\n        const listaKOUrl = this.globalVars.baseURL + '/api/listako';\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            })\r\n            };\r\n\r\n        return this.http.get<KO[]>(this.globalVars.baseURL + '/api/listako',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<KO[]>(this.globalVars.baseURL1 + '/layers/listako',  httpOptions).pipe(retry(1));\r\n        }));\r\n    }\r\n\r\n\r\n    getKO(id: number): Observable<KO> {\r\n        const KOUrl = this.globalVars.baseURL + '/api/ko';\r\n        let params = new HttpParams();\r\n        params = params.append('id', '' + id);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params:  new HttpParams().set('id', '' + id)\r\n            };\r\n\r\n        return this.http.get<KO>(this.globalVars.baseURL + '/api/ko',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<KO>(this.globalVars.baseURL1 + '/api/ko',  httpOptions);\r\n        }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { Linija } from '../models/linija';\r\nimport { Layer } from '../models/layer';\r\nimport { KO } from 'src/models/ko';\r\n\r\n\r\n@Injectable()\r\nexport class LinijeService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    getListaLinija(layer: Layer, ko: number): Observable<Linija[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/linije';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n        .append('layer', '' + layer.id)\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        return this.http.get<Linija[]>(this.globalVars.baseURL + '/layers/linije',  httpOptions)\r\n             .pipe(retry(1), catchError(err => {\r\n                return this.http.get<Linija[]>(this.globalVars.baseURL1 + '/layers/linije',  httpOptions);\r\n             }));\r\n    }\r\n\r\n    pripadaKO(linija: Linija, ko: KO) {\r\n        let res = false;\r\n        const coord = linija.coordinates[0];\r\n        try {\r\n            const rel = Math.abs(coord[0] - ko.centarx) + Math.abs(coord[1] - ko.centary);\r\n            if (ko.idKO === 7) {\r\n                if (rel && (rel < 0.08)) {\r\n                    res = true;\r\n                }\r\n            } else {\r\n                if (rel && rel < 0.04) {\r\n                    res = true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n        return res;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { MLinija } from '../models/mlinija';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class MLinijeService {\r\nfilterUlica = '';\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) {\r\n\r\n     }\r\n\r\n    getListaMLinija(layer: Layer, ko: number): Observable<MLinija[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/linije';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n        .append('layer', '' + layer.id)\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        return this.http.get<MLinija[]>(this.globalVars.baseURL + '/layers/linije',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<MLinija[]>(this.globalVars.baseURL1 + '/layers/linije',  httpOptions);\r\n         }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Poligon } from '../models/poligon';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { KO } from 'src/models/ko';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class PoligoniService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            // tslint:disable-next-line:object-literal-key-quotes\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        })};\r\n\r\n    getListaPoligona(layer: Layer, ko: number): Observable<Poligon[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/poligoni';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n        .append('layer', '' + layer.id)\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Accept: 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        // console.log(JSON.stringify(httpOptions));\r\n\r\n        return this.http.get<Poligon[]>(this.globalVars.baseURL + '/layers/poligoni',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<Poligon[]>(this.globalVars.baseURL1 + '/layers/poligoni',  httpOptions);\r\n         }));\r\n    }\r\n\r\n    pripadaKO(poligon: Poligon, ko: KO) {\r\n        let res = false;\r\n        const coord = poligon.geom.coordinates[0][0];\r\n        try {\r\n            const rel = Math.abs(coord[0] - ko.centarx) + Math.abs(coord[1] - ko.centary);\r\n            if (ko.idKO === 7) {\r\n                if (rel && (rel < 0.08)) {\r\n                    res = true;\r\n                }\r\n            } else {\r\n                if (rel && rel < 0.04) {\r\n                    res = true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n        return res;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Rasveta } from '../models/rasveta';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class RasvetaService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n    getListaRasveteKO(layer: Layer, ko: number): Observable<Rasveta[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/rasveta/listarasvete';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n\r\n        const params = new HttpParams()\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Accept: 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        return this.http.get<Rasveta[]>(this.globalVars.baseURL + '/rasveta/listarasvete',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<Rasveta[]>(this.globalVars.baseURL1 + '/layers/listarasvete',  httpOptions);\r\n         }));\r\n    }\r\n\r\n    icon(kol: number, zoom: number): string {\r\n        if (kol == null || kol === 0) {\r\n            if (zoom < 17) {\r\n                return 'assets/icons/black_dot.png';\r\n            } else {\r\n                return 'assets/icons/stub_0.png';\r\n            }\r\n        } else {\r\n            if (zoom < 17) {\r\n                return 'assets/icons/yellow_dot.png';\r\n            } else {\r\n                switch (kol) {\r\n                    case 1:\r\n                        return 'assets/icons/stub_1.png';\r\n                    case 2:\r\n                        return 'assets/icons/stub_2.png';\r\n                    case 3:\r\n                        return 'assets/icons/stub_3.png';\r\n                    case 4:\r\n                        return 'assets/icons/stub_4.png';\r\n                    default:\r\n                        return 'assets/icons/stub_0.png';\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Tacka } from '../models/tacka';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { KO } from 'src/models/ko';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class TackeService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n    getListaTacaka(layer: Layer, ko: number): Observable<Tacka[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/tacke';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n            .append('layer', '' + layer.id)\r\n            .append('ko', '' + ko)\r\n            .append('searchstring0', searchstring[0])\r\n            .append('searchstring1', searchstring[1])\r\n            .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n        };\r\n        return this.http.get<Tacka[]>(this.globalVars.baseURL + '/layers/tacke', httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<Tacka[]>(this.globalVars.baseURL1 + '/layers/tacke',  httpOptions);\r\n         }));\r\n    }\r\n\r\n    pripadaKO(tacka: Tacka, ko: KO) {\r\n        let res = false;\r\n        try {\r\n            const rel = Math.abs(tacka.geom.coordinates[0] - ko.centarx) + Math.abs(tacka.geom.coordinates[1] - ko.centary);\r\n            if (ko.idKO === 7) {\r\n                if (rel && (rel < 0.08)) {\r\n                    res = true;\r\n                }\r\n            } else {\r\n                if (rel && rel < 0.04) {\r\n                    res = true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n        return res;\r\n    }\r\n}\r\n"]}