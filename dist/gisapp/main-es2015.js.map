{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dialog-details/dialog-details.component.ts","./src/app/dialog-details/dialog-details.component.html","./src/app/dialog-layer-preview/dialog-layer-preview.component.ts","./src/app/dialog-layer-preview/dialog-layer-preview.component.html","./src/app/dialog-legend/dialog-legend.component.ts","./src/app/dialog-legend/dialog-legend.component.html","./src/app/mapa/mapa.component.ts","./src/app/mapa/mapa.component.html","./src/environments/environment.ts","./src/main.ts","./src/models/layer.ts","./src/models/linija.ts","./src/models/lml_linija_layera.ts","./src/models/lmm_tacka_layera.ts","./src/models/lmp_poligon_layera.ts","./src/providers/dialog.service.ts","./src/providers/event-emitter.service.ts","./src/providers/globalVars.ts","./src/providers/kategorija.service.ts","./src/providers/ko.service.ts","./src/providers/linije.service.ts","./src/providers/mlinije.service.ts","./src/providers/poligoni.service.ts","./src/providers/rasveta.service.ts","./src/providers/tacke.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {  MatSliderModule } from '@angular/material/slider';\r\nimport {  MatInputModule } from '@angular/material/input';\r\n\r\n@NgModule({\r\n    imports: [\r\n        //   CommonModule,\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatSliderModule,\r\n    ],\r\n    exports: [\r\n        MatMenuModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatListModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatTableModule,\r\n        MatSliderModule\r\n    ],\r\n    providers: [\r\n\r\n    ]\r\n})\r\n\r\nexport class AngularMaterialModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MapaComponent } from './mapa/mapa.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/mapa', pathMatch: 'full' },\r\n  { path: 'mapa', component: MapaComponent },\r\n  { path: '**', redirectTo: '/mapa', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { KO } from 'src/models/ko';\r\nimport { MenuLayer } from 'src/models/menu_layer';\r\nimport { Layer } from 'src/models/layer';\r\nimport { Kategorija } from 'src/models/kategorija';\r\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\r\nimport { KategorijaService } from 'src/providers/kategorija.service';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { DialogService } from 'src/providers/dialog.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'GIS Vrbas';\r\n  menuLayers: MenuLayer[] = [];\r\n  listaKat: Kategorija[] = [];\r\n  currentKO = ' (Vrbas-grad)';\r\n  poruka1 = '';\r\n  poruka2 = '';\r\n\r\n  listaKO: KO[] = [\r\n    { idKO: 7, sifraKO: '013', nazivKO: 'Vrbas', rBrKO: 1, centarx: 45.57185, centary: 19.640113, zoom: 14 },\r\n    { idKO: 1, sifraKO: '003', nazivKO: 'Bačko Dobro Polje', rBrKO: 3, centarx: 45.500382, centary: 19.68927, zoom: 15 },\r\n    { idKO: 8, sifraKO: '025', nazivKO: 'Zmajevo', rBrKO: 4, centarx: 45.452394, centary: 19.688595, zoom: 15 },\r\n    { idKO: 4, sifraKO: '016', nazivKO: 'Ravno Selo', rBrKO: 5, centarx: 45.447693, centary: 19.62254, zoom: 15 },\r\n    { idKO: 3, sifraKO: '007', nazivKO: 'Kucura', rBrKO: 6, centarx: 45.520522, centary: 19.589556, zoom: 15 },\r\n    { idKO: 5, sifraKO: '012', nazivKO: 'Savino Selo', rBrKO: 7, centarx: 45.506154, centary: 19.522938, zoom: 15 },\r\n   ];\r\n\r\n\r\n  constructor(\r\n    public storageMap: StorageMap,\r\n    public eventEmitter: EventEmitterService,\r\n    private kategorijaService: KategorijaService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private dialogService: DialogService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.storageMap.get('KO').subscribe((katOpst: KO) => {\r\n      if (katOpst) {\r\n        this.eventEmitter.KOChange.emit(katOpst);\r\n        this.currentKO = ' (' + katOpst.nazivKO + ')';\r\n      }\r\n      this.storageMap.get('mnLayers').subscribe((ls: MenuLayer[]) => {\r\n        if (ls) {\r\n          this.menuLayers = ls;\r\n          // console.log('menuLayers: ' + JSON.stringify(this.menuLayers.length));\r\n        } else {\r\n          this.storageMap.delete('mnLayers').subscribe();\r\n        }\r\n        // console.log('okida');\r\n        this.getListaKat();\r\n      });\r\n    });\r\n  }\r\n\r\n  getListaKat() {\r\n    this.kategorijaService.getKategorije()\r\n      .subscribe(lista => {\r\n        //  console.log(JSON.stringify(lista));\r\n        this.listaKat = [];\r\n        lista.filter(kat => kat.nadkateg === 0)\r\n          .forEach(item => this.listaKat.push(item));\r\n        this.listaKat.forEach(kat => kat.subkat = []);\r\n        lista.filter(kat => kat.nadkateg !== 0)\r\n          .forEach(subkat => this.listaKat.find(kat => kat.id === subkat.nadkateg).subkat.push(subkat));\r\n        this.checkFromStorage();\r\n      },\r\n        error => console.log('Nema konekcije!  ' + error)\r\n        );\r\n  }\r\n\r\n  promeniKO(katOpst: KO) {\r\n    this.storageMap.set('KO', katOpst).subscribe();\r\n    this.eventEmitter.KOChange.emit(katOpst);\r\n    this.currentKO = ' (' + katOpst.nazivKO + ')';\r\n    this.menuLayers.forEach(cl => {\r\n      const layer = this.getLayer(cl.id);\r\n      if (cl.checked && layer.pojedinacnaKO) {\r\n        this.reloadLayer(layer);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLayer(id: number) {\r\n    let layer: Layer;\r\n    this.listaKat.forEach(kat => {\r\n      if (kat.layers.findIndex(l => l.id === id) > -1) {\r\n        layer = kat.layers.find(l => l.id === id);\r\n        console.log(JSON.stringify(layer));\r\n      } else {\r\n        kat.subkat.forEach(extSubkat => {\r\n          if (extSubkat.layers.findIndex(l => l.id === id) > -1) {\r\n            layer = extSubkat.layers.find(l => l.id === id);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return layer;\r\n  }\r\n\r\n\r\n  checkFromStorage() {\r\n    this.listaKat.forEach(kat => kat.subkat.forEach(subkat => this.checkFromStorageSubkat(subkat)));\r\n    this.listaKat.forEach(kat => this.checkFromStorageKat(kat));\r\n  }\r\n\r\n  checkFromStorageSubkat(subkat: Kategorija) {\r\n    subkat.collapsed = true;\r\n    subkat.layers.forEach(l => {\r\n      const cl = this.menuLayers.find((mlayer: MenuLayer) => mlayer.id === l.id);\r\n      if (cl) {\r\n        l.checked = cl.checked;\r\n        if (l.checked) {\r\n          subkat.collapsed = false;\r\n        }\r\n      } else {\r\n        l.checked = false;\r\n        this.menuLayers.push({ id: l.id, checked: false });\r\n      }\r\n      if (l.checked) {\r\n        if (l.id === 4) {\r\n          this.ngxService.startLoader('rasveta');\r\n        } else {\r\n          this.ngxService.start();\r\n        }\r\n      }\r\n      this.eventEmitter.layerSwitch.emit(l);\r\n    });\r\n  }\r\n\r\n  checkFromStorageKat(kat: Kategorija) {\r\n    kat.collapsed = true;\r\n    kat.layers.forEach(l => {\r\n      const cl = this.menuLayers.find((mlayer: MenuLayer) => mlayer.id === l.id);\r\n      if (cl) {\r\n        l.checked = cl.checked;\r\n        if (l.checked) {\r\n          kat.collapsed = false;\r\n        }\r\n      } else {\r\n        l.checked = false;\r\n        this.menuLayers.push({ id: l.id, checked: false });\r\n      }\r\n      if (l.checked) {\r\n        if (l.id === 4) {\r\n          this.ngxService.startLoader('rasveta');\r\n        } else {\r\n          this.ngxService.start();\r\n        }\r\n      }\r\n      this.eventEmitter.layerSwitch.emit(l);\r\n    });\r\n    kat.subkat.forEach(subkat => {\r\n      if (!subkat.collapsed) {\r\n        kat.collapsed = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleCollapsed(kat: Kategorija) {\r\n    if (kat.collapsed) {\r\n      kat.collapsed = false;\r\n    } else {\r\n      kat.collapsed = true;\r\n    }\r\n  }\r\n\r\n  reloadLayer(layer: Layer) {\r\n    layer.checked = false;\r\n    this.eventEmitter.layerSwitch.emit(layer);\r\n    layer.checked = true;\r\n    this.eventEmitter.layerSwitch.emit(layer);\r\n  }\r\n\r\n  clickLayer(layer: Layer, preserveFitToBounds?: boolean) {\r\n    // console.log(\"layer: \" + JSON.stringify(layer));\r\n    if (layer.id === 4) {\r\n      this.ngxService.startLoader('rasveta');\r\n    } else {\r\n      this.ngxService.start();\r\n    }\r\n    layer.checked = !layer.checked;\r\n    if (layer.checked === false && layer.filteri) {\r\n      layer.filteri.forEach(f => f.searchstring = '');\r\n    }\r\n    if (preserveFitToBounds) {\r\n      layer.preserveFitToBounds = true;\r\n    } else {\r\n      layer.preserveFitToBounds = false;\r\n    }\r\n    // console.log('layer.checked:  ' + layer.checked);\r\n    if (!this.menuLayers) {\r\n      this.removeAllLayers();\r\n    }\r\n    const ml = this.menuLayers.find((mlayer: MenuLayer) => mlayer.id === layer.id);\r\n    // console.log(JSON.stringify(cl));\r\n    if (ml) {\r\n      ml.checked = layer.checked;\r\n    }\r\n    this.eventEmitter.layerSwitch.emit(layer);\r\n    this.storageMap.set('mnLayers', this.menuLayers).subscribe();\r\n    // console.log(\"menuLAyers: \" + localStorage.getItem(\"mnLayers\"));\r\n  }\r\n\r\n  checkAll(kat: Kategorija) {\r\n    const listUnchecked = kat.layers.filter(l => l.checked === false);\r\n    switch (listUnchecked.length) {\r\n      case 0:\r\n        kat.layers.forEach(l => {\r\n          this.clickLayer(l);\r\n        });\r\n        break;\r\n      case 1:\r\n        listUnchecked.forEach(l => {\r\n          this.clickLayer(l);  // if exist one uncheck, fit to bounds\r\n        });\r\n        break;\r\n      default:\r\n        listUnchecked.forEach(l => {\r\n          this.clickLayer(l, true);  // if exist more than one, not fit to bounds\r\n        });\r\n    }\r\n  }\r\n\r\n  removeAllLayers() {\r\n    this.menuLayers.forEach(ml => ml.checked = false);\r\n    this.storageMap.set('mnLayers', this.menuLayers).subscribe();\r\n    this.listaKat.forEach(kat => kat.layers.forEach(l => l.filteri.forEach(f => f.searchstring = '')));\r\n    this.listaKat.forEach(kat => kat.subkat.forEach(sk => sk.layers.forEach(l => l.filteri.forEach(f => f.searchstring = ''))));\r\n    this.checkFromStorage();\r\n  }\r\n\r\n  changeLayerPreview(ev, layer: Layer) {\r\n    const x = +ev.clientX;\r\n    const y = +ev.clientY;\r\n    this.dialogService.displayLayerPreview({ layer, x, y });\r\n  }\r\n\r\n  displayLegend(l: Layer) {\r\n    this.dialogService.displayLegend(l);\r\n  }\r\n\r\n}\r\n","<ngx-ui-loader></ngx-ui-loader>\r\n<ngx-ui-loader [loaderId]=\"'rasveta'\"></ngx-ui-loader>\r\n<mat-drawer-container>\r\n  <mat-drawer #sideNav mode=\"side\" opened=\"true\" >\r\n    <button mat-icon-button class=\"hideSideNavBtn\" (click)=\"sideNav.toggle()\">\r\n      <mat-icon>maximize</mat-icon>\r\n    </button>\r\n    <div class=\"meni-ko\">\r\n      <button mat-button [matMenuTriggerFor]=\"menuKO\">\r\n        <mat-icon>swap_horiz</mat-icon>promeni naselje {{currentKO}}\r\n      </button>\r\n    </div>\r\n    <div>\r\n      <h4 matSubheader>\r\n        Izaberi slojeve:\r\n      </h4>\r\n      <mat-list (click)=\"$event.stopPropagation()\">\r\n        <ng-container *ngFor=\"let kat of listaKat\">\r\n          <h2 matSubheader>\r\n            <button mat-button (click)=\"toggleCollapsed(kat)\">\r\n              <mat-icon matListIcon *ngIf=\"!kat.collapsed && (kat.layers.length>0 || kat.subkat.length>0)\">\r\n                arrow_drop_up</mat-icon>\r\n              <mat-icon matListIcon *ngIf=\"kat.collapsed && (kat.layers.length>0 || kat.subkat.length>0)\">\r\n                arrow_drop_down_circle</mat-icon>\r\n              {{kat.opis}}\r\n            </button>\r\n            <button mat-icon-button *ngIf=\"!kat.collapsed && kat.layers.length>0\" (click)=\"checkAll(kat)\">\r\n              <mat-icon>\r\n                done_all</mat-icon>\r\n            </button>\r\n          </h2>\r\n          <mat-list *ngIf=\"!kat.collapsed\">\r\n            <ng-container *ngTemplateOutlet=\"listitem; context: {k: kat}\"></ng-container>\r\n          </mat-list>\r\n          <ng-container *ngIf=\"!kat.collapsed\">\r\n            <mat-list *ngFor=\"let subkat of kat.subkat\" class=\"subkat\">\r\n              <h3 matSubheader>\r\n                <button mat-button (click)=\"toggleCollapsed(subkat)\">\r\n                  <mat-icon *ngIf=\"!subkat.collapsed && subkat.layers.length>0\">arrow_drop_up</mat-icon>\r\n                  <mat-icon *ngIf=\"subkat.collapsed && subkat.layers.length>0\">arrow_drop_down_circle</mat-icon>\r\n                  {{subkat.opis}}\r\n                </button>\r\n                <button mat-icon-button *ngIf=\"!subkat.collapsed && subkat.layers.length>0\" (click)=\"checkAll(subkat)\">\r\n                  <mat-icon matListIcon>\r\n                    done_all</mat-icon>\r\n                </button>\r\n              </h3>\r\n              <mat-list *ngIf=\"!subkat.collapsed\">\r\n                <ng-container *ngTemplateOutlet=\"listitem; context: {k: subkat}\"></ng-container>\r\n              </mat-list>\r\n            </mat-list>\r\n          </ng-container>\r\n        </ng-container>\r\n      </mat-list>\r\n    </div>\r\n    <mat-menu #menuKO=\"matMenu\">\r\n      <button mat-menu-item *ngFor=\"let KO of listaKO\" (click)=\"promeniKO(KO)\">{{KO.nazivKO}}</button>\r\n    </mat-menu>\r\n    <div class=\"ukloni-slojeve\">\r\n      <button mat-button (click)=\"removeAllLayers()\">\r\n        <mat-icon>layers_clear</mat-icon>ukloni sve slojeve\r\n      </button>\r\n    </div>\r\n    <div class=\"ogranicenje\">\r\n      <p>\r\n        Podaci u GIS-u su orijentacioni\r\n      </p>\r\n      <p>\r\n        i nisu za službenu upotrebu.\r\n      </p>\r\n    </div>\r\n  </mat-drawer>\r\n  <mat-drawer-content class=\"sideNav.isOpen?mapa-container:mapa-container\">\r\n    <router-outlet>\r\n      <div class=\"showSideNavContainer\">\r\n        <button mat-raised-button *ngIf=\"!sideNav.opened\" class=\"showSideNavBtn\" (click)=\"sideNav.toggle()\">\r\n          <mat-icon>launch</mat-icon>\r\n        </button>\r\n      </div>\r\n    </router-outlet>\r\n\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n\r\n<ng-template #filter let-l='l'>\r\n  <div *ngFor=\"let filter of l.filteri\">\r\n    <button mat-button (click)=\"reloadLayer(l)\">\r\n      <mat-icon>filter_list</mat-icon>\r\n    </button>\r\n    <mat-form-field appearance=\"outline\" class=\"searchfield\">\r\n      <mat-label>{{filter.opis}}</mat-label>\r\n      <input matInput [(ngModel)]=\"filter.searchstring\" (keydown)=\"$event.stopPropagation()\"\r\n        (keyup.enter)=\"reloadLayer(l)\">\r\n    </mat-form-field>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #listitem let-k='k'>\r\n  <mat-list-item *ngFor=\"let l of k.layers\" style=\"font-size: small; height: fit-content; padding-bottom: 2px; padding-left: 10px\">\r\n    <div matLine class=\"mn-slojevi\">\r\n      <button mat-button (click)=\"clickLayer(l)\" class=\"btn-sloj\">\r\n        <mat-icon *ngIf=\"!l.checked\">check_box_outline_blank</mat-icon>\r\n        <mat-icon *ngIf=\"l.checked\">check_box</mat-icon>\r\n        {{l.naziv}}\r\n      </button>\r\n      <button  [disabled]=\"!(l.checked && l.fillColor)\"  [ngStyle]=\"{'opacity': !(l.checked && l.fillColor) ? '0' : '1'}\"\r\n      (click)=\"changeLayerPreview($event, l)\" class=\"btn-legend\" mat-button>\r\n      <mat-icon [ngStyle]=\"{'color': l.fillColor}\">brush</mat-icon>\r\n      </button> \r\n      <button  [disabled]=\"!(l.checked && l.legend)\"  [ngStyle]=\"{'opacity': !(l.checked && l.legend) ? '0' : '1'}\"\r\n      (click)=\"displayLegend(l)\" class=\"btn-legend\" mat-button>\r\n      <mat-icon>live_help</mat-icon>\r\n      </button>\r\n    </div>\r\n    <p matLine *ngIf=\"l.checked\">\r\n      <ng-container *ngTemplateOutlet=\"filter; context: {l: l}\"></ng-container>\r\n    </p>\r\n  </mat-list-item>\r\n</ng-template>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { MapaComponent } from './mapa/mapa.component';\r\nimport { StorageModule } from '@ngx-pwa/local-storage';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\r\nimport { KOService } from 'src/providers/ko.service';\r\nimport { TackeService } from 'src/providers/tacke.service';\r\nimport { PoligoniService } from 'src/providers/poligoni.service';\r\nimport { LinijeService } from 'src/providers/linije.service';\r\nimport { MLinijeService } from 'src/providers/mlinije.service';\r\nimport { RasvetaService } from 'src/providers/rasveta.service';\r\nimport { KategorijaService } from 'src/providers/kategorija.service';\r\nimport { GlobalVars } from 'src/providers/globalVars';\r\n\r\nimport { NgxUiLoaderModule, NgxUiLoaderConfig} from 'ngx-ui-loader';\r\nimport { DialogLegendComponent } from './dialog-legend/dialog-legend.component';\r\nimport { DialogDetailsComponent } from './dialog-details/dialog-details.component';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { ColorPickerModule } from 'ngx-color-picker';\r\nimport { DialogLayerPreviewComponent } from './dialog-layer-preview/dialog-layer-preview.component';\r\n\r\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\r\n  bgsColor: 'green',\r\n  bgsOpacity: 0.5,\r\n  bgsPosition: 'bottom-right',\r\n  bgsSize: 60,\r\n  bgsType: 'ball-spin',\r\n  blur: 5,\r\n  delay: 0.2,\r\n  fgsColor: '#17a11e',\r\n  fgsPosition: 'center-center',\r\n  fgsSize: 60,\r\n  fgsType: 'folding-cube',\r\n  gap: 24,\r\n  logoPosition: 'center-center',\r\n  logoSize: 120,\r\n  // \"logoUrl\": \"assets/imgs/logo.png\",\r\n  masterLoaderId: 'master',\r\n  overlayBorderRadius: '0',\r\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\r\n  pbColor: 'green',\r\n  pbDirection: 'ltr',\r\n  pbThickness: 3,\r\n  hasProgressBar: true,\r\n  text: 'Molimo sačekajte...',\r\n  textColor: '#FFFFFF',\r\n  textPosition: 'center-center',\r\n  maxTime: 0,\r\n  minTime: 0\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapaComponent,\r\n    DialogLegendComponent,\r\n    DialogDetailsComponent,\r\n    DialogLayerPreviewComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    AngularMaterialModule,\r\n    ColorPickerModule,\r\n    StorageModule.forRoot({\r\n      IDBNoWrap: true,\r\n    }),\r\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig)],\r\n    entryComponents: [DialogLegendComponent, DialogDetailsComponent, DialogLayerPreviewComponent],\r\n  providers: [\r\n    EventEmitterService,\r\n    KOService,\r\n    TackeService,\r\n    PoligoniService,\r\n    LinijeService,\r\n    MLinijeService,\r\n    RasvetaService,\r\n    KategorijaService,\r\n    GlobalVars\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-details',\r\n  templateUrl: './dialog-details.component.html',\r\n  styleUrls: ['./dialog-details.component.scss']\r\n})\r\nexport class DialogDetailsComponent implements OnInit {\r\n  detalji: Map<string, string> = new Map<string, string>();\r\n  lista: { key: string, value: string }[] = [];\r\n  displayedColumns: string[] = ['key', 'value'];\r\n\r\n  constructor(public dialogRef: MatDialogRef<DialogDetailsComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: string) {\r\n    try {\r\n      this.detalji = JSON.parse(data);\r\n    } catch (e) {\r\n\r\n    }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    Object.keys(this.detalji).forEach(k => {\r\n      this.lista.push({ key: k, value: this.detalji[k] });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<mat-dialog-content>\r\n  <table mat-table [dataSource]=\"lista\" class=\"mat-elevation-z8\">\r\n\r\n    <!-- Position Column -->\r\n    <ng-container matColumnDef=\"key\">\r\n      <th mat-header-cell *matHeaderCellDef>\r\n        <button mat-button [mat-dialog-close]=\"true\">\r\n          <mat-icon>keyboard_backspace</mat-icon>\r\n        </button>\r\n      </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.key}} </td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"value\">\r\n      <th mat-header-cell *matHeaderCellDef> </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</mat-dialog-content>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Layer } from 'src/models/layer';\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\n\n@Component({\n  selector: 'app-dialog-layer-preview',\n  templateUrl: './dialog-layer-preview.component.html',\n  styleUrls: ['./dialog-layer-preview.component.scss']\n})\nexport class DialogLayerPreviewComponent implements OnInit {\n\n  constructor( public dialogRef: MatDialogRef<DialogLayerPreviewComponent>,\n               @Inject(MAT_DIALOG_DATA) public layer: Layer, public eventEmitter: EventEmitterService) { }\n\n  ngOnInit() {\n  }\n\n  changedLayerPreview() {\n     this.eventEmitter.layerPreviewChange.emit(this.layer);\n  }\n\n}\n","<h3>{{layer.naziv}}</h3>\n<div *ngIf=\"layer.fillColor\">\n    <h5>Boja sloja:</h5>\n    <input \n    [(colorPicker)]=\"layer.fillColor\" \n    [style.background]=\"layer.fillColor\" \n    (colorPickerSelect)=\"changedLayerPreview()\"/>\n</div>\n<div *ngIf=\"layer.fillOpacity\">\n    <h5>Prozirnost sloja:</h5>\n    <mat-slider\n    (change)=\"changedLayerPreview()\"\n    class=\"slider\"\n    [max]=\"1\"\n    [min]=\"0\"\n    [step]=\"0.05\"\n    [thumbLabel]=\"false\"\n    [tickInterval]=\"0.1\"\n    [(ngModel)]=\"layer.fillOpacity\">\n</mat-slider>\n</div>\n<div  *ngIf=\"layer.strokeColor\">\n   <h5>Boja ivica:</h5>\n    <input \n    [(colorPicker)]=\"layer.strokeColor\" \n    [style.background]=\"layer.strokeColor\" \n    (colorPickerSelect)=\"changedLayerPreview()\"/>\n</div>\n<div *ngIf=\"layer.strokeOpacity\">\n    <h5>Prozirnost ivica:</h5>\n    <mat-slider\n    (change)=\"changedLayerPreview()\"\n    class=\"slider\"\n    [max]=\"1\"\n    [min]=\"0\"\n    [step]=\"0.05\"\n    [thumbLabel]=\"false\"\n    [tickInterval]=\"0.1\"\n    [(ngModel)]=\"layer.strokeOpacity\">\n</mat-slider>\n</div>\n\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-legend',\r\n  templateUrl: './dialog-legend.component.html',\r\n  styleUrls: ['./dialog-legend.component.scss']\r\n})\r\nexport class DialogLegendComponent implements OnInit {\r\n\r\n  constructor( public dialogRef: MatDialogRef<DialogLegendComponent>,\r\n               @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  nePrikazuj() {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{data.title}}</h2>\r\n<mat-list>\r\n    <mat-list-item *ngFor=\"let item of data.simboli\">\r\n        <img src=\"{{item.img}}\">{{\"  -  \" + item.tekst}}\r\n    </mat-list-item>\r\n</mat-list>\r\n<div class=\"actions\" mat-dialog-actions>\r\n    <button class=\"btn\" mat-stroked-button [mat-dialog-close]=\"false\">OK</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport 'leaflet.markercluster';\r\nimport 'leaflet-easyprint';\r\nimport { KO } from 'src/models/ko';\r\nimport { LmmTackaLayera } from 'src/models/lmm_tacka_layera';\r\nimport { LmlLinijaLayera } from 'src/models/lml_linija_layera';\r\nimport { LmpPoligonLayera } from 'src/models/lmp_poligon_layera';\r\nimport { EventEmitterService } from 'src/providers/event-emitter.service';\r\nimport { Tacka } from 'src/models/tacka';\r\nimport { Linija } from 'src/models/linija';\r\nimport { Poligon } from 'src/models/poligon';\r\nimport { Rasveta } from 'src/models/rasveta';\r\nimport { TackeService } from 'src/providers/tacke.service';\r\nimport { MLinijeService } from 'src/providers/mlinije.service';\r\nimport { PoligoniService } from 'src/providers/poligoni.service';\r\nimport { RasvetaService } from 'src/providers/rasveta.service';\r\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\r\nimport { DialogDetailsComponent } from '../dialog-details/dialog-details.component';\r\nimport { DialogService } from 'src/providers/dialog.service';\r\nimport { LinijeService } from 'src/providers/linije.service';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-mapa',\r\n  templateUrl: './mapa.component.html',\r\n  styleUrls: ['./mapa.component.scss']\r\n})\r\n\r\n\r\nexport class MapaComponent implements OnInit {\r\n  mymap: L.Map;\r\n  selectedIdKO = 7;\r\n  KO: KO = { idKO: 7, sifraKO: '013', nazivKO: 'Vrbas-grad', rBrKO: 1, centarx: 45.57185, centary: 19.640113, zoom: 14 };\r\n  listaKO: KO[];\r\n  layers: Array<Layer> = [];\r\n  errorMessage: string;\r\n  listaLmmTackaLayera: LmmTackaLayera[] = new Array<LmmTackaLayera>();\r\n  listaLmlLinijaLayera: LmlLinijaLayera[] = new Array<LmlLinijaLayera>();\r\n  listaLmpPoligonLayera: LmpPoligonLayera[] = new Array<LmpPoligonLayera>();\r\n  rasvetaMarkers = L.markerClusterGroup({ disableClusteringAtZoom: 18 });\r\n  loadedLayers: number[] = [];\r\n  baseLayerControl: L.Control;\r\n  baseMaps =\r\n    {\r\n      'Esri Topo':\r\n      L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\r\n        {\r\n          // tslint:disable-next-line:max-line-length\r\n          attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community'\r\n        }),\r\n      'Openstreet mapnik':\r\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n          maxZoom: 19,\r\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }),\r\n      'Esri World Imaginary':\r\n        L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n          {\r\n            // tslint:disable-next-line:max-line-length\r\n            attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n          })\r\n    };\r\n\r\n  constructor(\r\n    private eventEmitter: EventEmitterService,\r\n    private ngxService: NgxUiLoaderService,\r\n    private tackeService: TackeService,\r\n    private linijeService: LinijeService,\r\n    private mlinijeService: MLinijeService,\r\n    private poligoniService: PoligoniService,\r\n    private rasvetaService: RasvetaService,\r\n    private dialogService: DialogService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.mymap = L.map('lmapa', { zoomSnap: 0.2, zoomControl: false })\r\n      .setView(L.latLng(this.KO.centarx, this.KO.centary), this.KO.zoom);\r\n    this.baseMaps['Esri Topo'].addTo(this.mymap);\r\n    this.eventEmitter.KOChange.subscribe((ko: KO) => {\r\n      // console.log(JSON.stringify(ko));\r\n      this.KO = ko;\r\n      this.mymap.panTo(L.latLng(ko.centarx, ko.centary));\r\n      this.mymap.setZoom(ko.zoom);\r\n    });\r\n    this.eventEmitter.layerSwitch.subscribe((layer: Layer) => {\r\n      // console.log(\"Loading layer: \" + JSON.stringify(layer));\r\n      if (layer.checked) {\r\n        // console.log(JSON.stringify(layer.filteri));\r\n        this.loadLayer(layer);\r\n      } else {\r\n        // console.log(\"Unloading layer: \" + layer.id + \" , vrsta: \" + layer.vrsta);\r\n        this.unloadLayer(layer);\r\n      }\r\n    });\r\n    this.eventEmitter.layerPreviewChange.subscribe((layer: Layer) => {\r\n      this.changedLayerPreview(layer);\r\n    });\r\n    this.baseLayerControl = L.control.layers(this.baseMaps, {}).addTo(this.mymap);\r\n    L.control.zoom({\r\n      position: 'topright'\r\n    }).addTo(this.mymap);\r\n    L.easyPrint({\r\n      title: 'Štampanje',\r\n      position: 'topright',\r\n      sizeModes: ['A4Portrait', 'A4Landscape']\r\n  }).addTo(this.mymap);\r\n  }\r\n\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// Layers //////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  loadLayer(layer: Layer) {\r\n    switch (layer.vrsta) {\r\n      case 't':\r\n      case 'T':\r\n        this.getTacke(layer);\r\n        break;\r\n      case 'p':\r\n      case 'P':\r\n        this.getPoligoni(layer);\r\n        break;\r\n      case 'l':\r\n      case 'L':\r\n        this.getMLinije(layer);\r\n        break;\r\n      case 'r':\r\n      case 'R':\r\n        this.getRasveta(layer);\r\n        break;\r\n    }\r\n  }\r\n\r\n  unloadLayer(layer: Layer) {\r\n    switch (layer.vrsta) {\r\n      case 't':\r\n      case 'T':\r\n        this.listaLmmTackaLayera.forEach((tl, index) => {\r\n          if (tl.layerId === layer.id) {\r\n            tl.lmm.forEach(m => m.removeFrom(this.mymap));\r\n            this.listaLmmTackaLayera.splice(index, 1);\r\n            this.ngxService.stop();\r\n          }\r\n        });\r\n        break;\r\n      case 'p':\r\n      case 'P':\r\n        this.listaLmpPoligonLayera.forEach((pl, index) => {\r\n          if (pl.layerId === layer.id) {\r\n            pl.lmp.forEach(p => p.removeFrom(this.mymap));\r\n            this.listaLmpPoligonLayera.splice(index, 1);\r\n            this.ngxService.stop();\r\n          }\r\n        });\r\n        break;\r\n      case 'l':\r\n      case 'L':\r\n        this.listaLmlLinijaLayera.forEach((ll, index) => {\r\n          if (ll.layerId === layer.id) {\r\n            ll.lml.forEach(l => l.removeFrom(this.mymap));\r\n            this.listaLmlLinijaLayera.splice(index, 1);\r\n            this.ngxService.stop();\r\n          }\r\n        });\r\n        break;\r\n      case 'r':\r\n      case 'R':\r\n        this.rasvetaMarkers.clearLayers();\r\n        this.rasvetaMarkers.removeFrom(this.mymap);\r\n        this.ngxService.stopLoader('rasveta');\r\n        break;\r\n    }\r\n  }\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  ////// Tacke //////////////////////////////////////////////////////////////////////////////////////\r\n  getTacke(layer: Layer) {\r\n    const lmmTackaLayera = new LmmTackaLayera();\r\n    const lmmZaKO = [] as L.Marker[];\r\n    lmmTackaLayera.layerId = layer.id;\r\n    this.tackeService.getListaTacaka(layer, this.KO.idKO).subscribe(\r\n      lista => {\r\n        if (lista) {\r\n          lista.forEach(tacka => {\r\n            const lmmTacka = this.lmm(tacka);\r\n            lmmTackaLayera.lmm.push(lmmTacka);\r\n            if (!layer.preserveFitToBounds && this.tackeService.pripadaKO(tacka, this.KO)) {\r\n              lmmZaKO.push(lmmTacka);\r\n            }\r\n          }\r\n          );\r\n        }\r\n        this.listaLmmTackaLayera.push(lmmTackaLayera);\r\n        layer.checked = true;\r\n        this.ngxService.stop();\r\n        if (!layer.preserveFitToBounds && lmmZaKO.length > 0) {\r\n          const fg = new L.featureGroup(lmmZaKO);\r\n          const bounds = fg.getBounds() as L.bounds;\r\n          this.mymap.flyToBounds(bounds, { padding: [15, 15] });\r\n        }\r\n      });\r\n  }\r\n\r\n  lmm(tacka: Tacka) {\r\n    const lmm = L.marker([tacka.geom.coordinates[0], tacka.geom.coordinates[1]])\r\n      .setIcon(L.icon({ iconUrl: tacka.icon, iconSize: [16, 16], iconAnchor: [8, 16] })).addTo(this.mymap);\r\n    const divElement = document.createElement('div');\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = tacka.info;\r\n    pElement.innerHTML += '<br\\>';\r\n    pElement.innerHTML += '<br\\>';\r\n\r\n    if (tacka.detalji && tacka.detalji !== null) {\r\n      const bElement = document.createElement('button');\r\n      bElement.id = 'popup_button';\r\n      bElement.addEventListener('click',\r\n        () =>\r\n          this.dialogService.dialog.open(DialogDetailsComponent, {\r\n            // width: '250px',\r\n            data: tacka.detalji\r\n          })\r\n      );\r\n      bElement.innerHTML = 'Detaljno';\r\n      pElement.appendChild(bElement);\r\n    }\r\n    divElement.appendChild(pElement);\r\n    lmm.bindPopup(divElement);\r\n    if (tacka.label) {\r\n      lmm.bindTooltip(tacka.label, { permanent: true, direction: 'right',  opacity: '0.3', className: 'label' });\r\n    } else {\r\n      lmm.bindTooltip(tacka.tooltip, { opacity: 0.7 });\r\n    }\r\n    return lmm;\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// MLinije //////////////////////////////////////////////////////////////////////////////////////\r\n  getMLinije(layer: Layer) {\r\n    const lmlLinijaLayera = new LmlLinijaLayera();\r\n    const lmlZaKO = [] as L.Polyline[];\r\n    lmlLinijaLayera.layerId = layer.id;\r\n    this.mlinijeService.getListaMLinija(layer, this.KO.idKO).subscribe(\r\n      lista => {\r\n        if (lista) {\r\n          lista.forEach(mlinija => {\r\n            for (const coord of mlinija.geom.coordinates) {\r\n              const linija = new Linija();\r\n              linija.coordinates = coord;\r\n              linija.strokeColor = mlinija.strokeColor;\r\n              linija.strokeOpacity = mlinija.strokeOpacity;\r\n              linija.strokeWeight = mlinija.strokeWeight;\r\n              linija.opis = mlinija.opis;\r\n              linija.info = mlinija.info;\r\n              const lmlMlinija = this.lml(linija) as L.Polyline;\r\n              lmlLinijaLayera.lml.push(lmlMlinija);\r\n              if (!layer.preserveFitToBounds && this.linijeService.pripadaKO(linija, this.KO)) {\r\n                lmlZaKO.push(lmlMlinija);\r\n              }\r\n            }\r\n          });\r\n        }\r\n        this.listaLmlLinijaLayera.push(lmlLinijaLayera);\r\n        layer.checked = true;\r\n        this.ngxService.stop();\r\n        if (!layer.preserveFitToBounds && lmlZaKO.length > 0) {\r\n          const fg = new L.featureGroup(lmlZaKO);\r\n          const bounds = fg.getBounds() as L.bounds;\r\n          this.mymap.flyToBounds(bounds, { padding: [15, 15] });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  lml(linija: Linija) {\r\n    let path: L.LatLng[] = new Array<L.LatLng>();\r\n    for (const coord of linija.coordinates) {\r\n      path.push(new L.LatLng(coord[0], coord[1]));\r\n    }\r\n    const lml = L.polyline(path);\r\n    if (linija.label) {\r\n      lml.bindTooltip(linija.label, { permanent: true, direction: 'center', opacity: '0.3', className: 'label' });\r\n    } else {\r\n      lml.bindTooltip(linija.opis);\r\n    }\r\n    lml.setStyle({\r\n      color: linija.strokeColor,\r\n      opacity: linija.strokeOpacity,\r\n      weight: linija.strokeWeight\r\n    }).addTo(this.mymap);\r\n    const divElement = document.createElement('div');\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = linija.info;\r\n    pElement.innerHTML += '<br\\>';\r\n    pElement.innerHTML += '<br\\>';\r\n\r\n    if (linija.detalji && linija.detalji !== null) {\r\n      const bElement = document.createElement('button');\r\n      bElement.id = 'popup_button';\r\n      bElement.addEventListener('click',\r\n        () =>\r\n          this.dialogService.dialog.open(DialogDetailsComponent, {\r\n            // width: '250px',\r\n            data: linija.detalji\r\n          })\r\n      );\r\n      bElement.innerHTML = 'Detaljno';\r\n      pElement.appendChild(bElement);\r\n    }\r\n    divElement.appendChild(pElement);\r\n    lml.bindPopup(divElement);\r\n    path = [];\r\n    return lml;\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// Poligoni //////////////////////////////////////////////////////////////////////////////////////\r\n  getPoligoni(layer: Layer) {\r\n    const lmpPoligonLayera = new LmpPoligonLayera();\r\n    lmpPoligonLayera.layerId = layer.id;\r\n    const lmpZaKO = [] as L.Polygon[];\r\n    this.poligoniService.getListaPoligona(layer, this.KO.idKO).subscribe(\r\n      lista => {\r\n        if (lista) {\r\n          lista.forEach(poligon => {\r\n            const lmpPoligon = this.lmp(poligon) as L.Polygon;\r\n            lmpPoligonLayera.lmp.push(lmpPoligon);\r\n            if (!layer.preserveFitToBounds && this.poligoniService.pripadaKO(poligon, this.KO)) {\r\n              lmpZaKO.push(lmpPoligon);\r\n            }\r\n          });\r\n        }\r\n        this.listaLmpPoligonLayera.push(lmpPoligonLayera);\r\n        layer.checked = true;\r\n        this.ngxService.stop();\r\n        if (!layer.preserveFitToBounds && lmpZaKO.length > 0) {\r\n          const fg = new L.featureGroup(lmpZaKO);\r\n          const bounds = fg.getBounds() as L.bounds;\r\n          this.mymap.flyToBounds(bounds, { padding: [15, 15], maxZoom: 17 });\r\n        }\r\n      });\r\n  }\r\n\r\n  lmp(poligon: Poligon) {\r\n    let temena: L.LatLng[] = new Array<L.LatLng>();\r\n    let paths: L.LatLng[][] = new Array<L.LatLng[]>();\r\n    for (let i = 0; i < poligon.geom.coordinates.length; i++) {\r\n      poligon.geom.coordinates[+i].forEach(koord => {\r\n        temena.push(new L.LatLng(koord[0], koord[1]));\r\n      });\r\n      paths.push(temena);\r\n      temena = [];\r\n    }\r\n    const lmp = L.polygon(paths);\r\n    if (poligon.label) {\r\n      lmp.bindTooltip(poligon.label, { permanent: true, direction: 'center', opacity: '0.3', className: 'label' });\r\n    }\r\n    lmp.setStyle({\r\n      color: poligon.strokeColor,\r\n      opacity: poligon.strokeOpacity,\r\n      weight: poligon.strokeWeight,\r\n      fillColor: poligon.fillColor,\r\n      fillOpacity: poligon.fillOpacity\r\n    }).addTo(this.mymap);\r\n    const divElement = document.createElement('div');\r\n\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = poligon.info;\r\n    pElement.innerHTML += '<br\\>';\r\n    pElement.innerHTML += '<br\\>';\r\n\r\n    if (poligon.detalji && poligon.detalji !== null) {\r\n      const bElement = document.createElement('button');\r\n      bElement.id = 'popup_button';\r\n      bElement.addEventListener('click',\r\n        () =>\r\n          this.dialogService.dialog.open(DialogDetailsComponent, {\r\n            // width: '250px',\r\n            data: poligon.detalji\r\n          })\r\n      );\r\n      bElement.innerHTML = 'Detaljno';\r\n      pElement.appendChild(bElement);\r\n    }\r\n    divElement.appendChild(pElement);\r\n    lmp.bindPopup(divElement);\r\n    paths = [];\r\n\r\n    return lmp;\r\n  }\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////\r\n  /// Rasveta //////////////////////////////////////////////////////////////////////////////////////\r\n  getRasveta(layer: Layer) {\r\n    this.rasvetaService.getListaRasveteKO(layer, this.KO.idKO).subscribe(\r\n      listarasvete => {\r\n        this.removeRasveta();\r\n        listarasvete.forEach(stub => this.dodajRasvetaMarkerNaMapu(stub));\r\n        this.rasvetaMarkers.addTo(this.mymap);\r\n        this.ngxService.stopLoader('rasveta');\r\n      });\r\n  }\r\n\r\n  dodajRasvetaMarkerNaMapu(rasveta: Rasveta) {\r\n    const markerLatLng = new L.LatLng(rasveta.geom.coordinates[0], rasveta.geom.coordinates[1]);\r\n    let info: string;\r\n    let snaga: string;\r\n    const marker = L.marker(markerLatLng)\r\n      .setIcon(L.icon({ iconUrl: this.rasvetaService.icon(rasveta.kolicina, 18) }));\r\n    if (rasveta.kolicina !== null) {\r\n      if (rasveta.snaga1 !== null) {\r\n        snaga = '' + rasveta.snaga1;\r\n        if (rasveta.snaga2 !== null) {\r\n          snaga = snaga + '+' + rasveta.snaga2;\r\n          if (rasveta.snaga3 !== null) {\r\n            snaga = snaga + '+' + rasveta.snaga3;\r\n            if (rasveta.snaga4 !== null) {\r\n              snaga = snaga + '+' + rasveta.snaga4;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // tslint:disable-next-line:max-line-length\r\n      info = 'Tip stuba: ' + rasveta.stub + ',<br> visina: ' + rasveta.visina + ',<br> tip sijalice: ' + rasveta.tipsijalice + '<br>' + 'w:' + snaga;\r\n    } else {\r\n      info = 'Tip stuba: ' + rasveta.stub + ', visina: ' + rasveta.visina;\r\n    }\r\n\r\n    const divElement = document.createElement('div');\r\n\r\n    const pElement = document.createElement('p');\r\n    pElement.innerHTML = info;\r\n    pElement.innerHTML += '<br\\>';\r\n    divElement.appendChild(pElement);\r\n    marker.bindPopup(divElement);\r\n    this.rasvetaMarkers.addLayer(marker);\r\n\r\n  }\r\n\r\n  removeRasveta() {\r\n    this.rasvetaMarkers.clearLayers();\r\n  }\r\n\r\n  changedLayerPreview(layer: Layer) {\r\n    switch (layer.vrsta) {\r\n      case 't':\r\n      case 'T':\r\n\r\n        break;\r\n      case 'p':\r\n      case 'P':\r\n        this.listaLmpPoligonLayera.find(l => l.layerId === layer.id).lmp.forEach(poligon => {\r\n          poligon.setStyle({\r\n            color: layer.strokeColor,\r\n            opacity: layer.strokeOpacity,\r\n            fillColor: layer.fillColor,\r\n            fillOpacity: layer.fillOpacity\r\n          });\r\n        });\r\n        break;\r\n      case 'l':\r\n      case 'L':\r\n\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.css\"\r\n  integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"\r\n  crossorigin=\"\"/>\r\n  <script src=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.js\"\r\n  integrity=\"sha512-GffPMF3RvMeYyc1LWMHtK8EbPv0iNZ8/oTtHPx9/cc2ILxQ+u905qIwdpULaqDkyBKgOaB57QTMg7ztg8Jm2Og==\"\r\n  crossorigin=\"\"></script>\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.css\" />\r\n<link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet.markercluster@1.4.1/dist/MarkerCluster.Default.css\" />\r\n\r\n\r\n<div id=\"lmapa\" class=\"lmapa\"></div>\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Filter } from './filter';\r\n\r\n\r\nexport class Layer {\r\nid: number;\r\nnaziv: string;\r\nvrsta: string;\r\nredosled: number;\r\npojedinacnaKO = false;\r\nlegend: string;\r\nchecked = false;\r\nfillColor: string;\r\nfillOpacity: number;\r\nstrokeColor: string;\r\nstrokeOpacity: number;\r\nfilteri: Filter[];\r\nenabledLegend = true;\r\npreserveFitToBounds = false;\r\n}\r\n","export class Linija {\r\ncoordinates: number[][];\r\nopis: string;\r\nstrokeColor: string;\r\nstrokeOpacity: number;\r\nstrokeWeight: number;\r\nlabel: string;\r\ninfo: string;\r\ndetalji: any;\r\n}\r\n","import { Polyline } from 'leaflet';\r\n\r\n// Leaflet map polygon\r\nexport class LmlLinijaLayera {\r\n layerId: number;\r\n lml: Polyline[] = [];\r\n}\r\n","import { Marker } from 'leaflet';\r\n\r\n// Leaflet map marker\r\nexport class LmmTackaLayera {\r\n    layerId: number;\r\n    lmm: Marker[] = [];\r\n}\r\n","import { Polygon } from 'leaflet';\r\n\r\n// Leaflet map polygon\r\nexport class LmpPoligonLayera {\r\n layerId: number;\r\n lmp: Polygon[] = [];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DialogLegendComponent } from 'src/app/dialog-legend/dialog-legend.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { StorageMap } from '@ngx-pwa/local-storage';\r\nimport { Layer } from 'src/models/layer';\r\nimport { DialogLayerPreviewComponent } from 'src/app/dialog-layer-preview/dialog-layer-preview.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DialogService {\r\n\r\n  constructor(public dialog: MatDialog, protected storageMap: StorageMap) {\r\n\r\n  }\r\n\r\n  displayLegend(layer: Layer) {\r\n    if (layer.legend) {\r\n      try {\r\n        const data = { title: layer.naziv + ':', simboli: JSON.parse(layer.legend) };\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.position = {\r\n          bottom: '0',\r\n          right: '300'\r\n        };\r\n        dialogConfig.data = data;\r\n        dialogConfig.width = '250px';\r\n        dialogConfig.hasBackdrop = true;\r\n        this.dialog.open(DialogLegendComponent, dialogConfig);\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n\r\n  displayLayerPreview(params: {layer: Layer, x, y}) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.position = {\r\n      left: (+params.x + 30) + 'px'\r\n    };\r\n    dialogConfig.data = params.layer;\r\n    dialogConfig.width = '250px';\r\n    dialogConfig.hasBackdrop = true;\r\n    this.dialog.open(DialogLayerPreviewComponent, dialogConfig);\r\n  }\r\n}\r\n","import { Injectable, EventEmitter } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventEmitterService {\r\n\r\n  constructor() { }\r\n\r\n  KOChange = new EventEmitter();\r\n  layerSwitch = new EventEmitter();\r\n  layerPreviewChange = new EventEmitter();\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GlobalVars {\r\n  // baseURL = 'http://localhost:8080';\r\n  // baseURL1 = 'http://localhost:8080';\r\n  // baseURL = 'https://vgis21.herokuapp.com';\r\n  // baseURL1 = 'https://vgis21.herokuapp.com';\r\n  // baseURL = 'http://79.101.21.143:8070/gis-vrbas-2.1.2';\r\n  // baseURL = 'https://93.87.76.62:8081';\r\n  // baseURL1 = 'http://192.168.69.21:8070/gis-vrbas-2.1.2'; // lokalna adresa\r\n  // baseURL1 = 'https://93.87.76.62:8081';\r\n   baseURL = 'https://www.vrbasgis.net:8080/gis-3.0.1';\r\n  // baseURL = 'https://93.87.76.62:8081';\r\n  baseURL1 =  'https://www.vrbasgis.net:8080/gis-3.0.1';// lokalna adresa\r\n  // baseURL1 = 'http://93.87.76.62:8080/gis-3.0.1';// lokalna adresa\r\n  // baseURL1 = 'https://93.87.76.62:8081';\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public setBaseURL(value: string) {\r\n    this.baseURL = value;\r\n  }\r\n\r\n  public getBaseURL(): string {\r\n    return this.baseURL;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Kategorija } from '../models/kategorija';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\n\r\n@Injectable()\r\nexport class KategorijaService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    getKategorije(): Observable<Kategorija[]> {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            })\r\n            };\r\n        return this.http.get<Kategorija[]>(this.globalVars.baseURL + '/layers/kategorije',  httpOptions)\r\n            .pipe(retry(1), catchError(err => {\r\n                return this.http.get<Kategorija[]>(this.globalVars.baseURL1 + '/layers/kategorije',  httpOptions).pipe(retry(1));\r\n            }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { KO } from '../models/ko';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\n\r\n\r\n@Injectable()\r\nexport class KOService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    getListaKO(): Observable<KO[]> {\r\n        const listaKOUrl = this.globalVars.baseURL + '/api/listako';\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            })\r\n            };\r\n\r\n        return this.http.get<KO[]>(this.globalVars.baseURL + '/api/listako',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<KO[]>(this.globalVars.baseURL1 + '/layers/listako',  httpOptions).pipe(retry(1));\r\n        }));\r\n    }\r\n\r\n\r\n    getKO(id: number): Observable<KO> {\r\n        const KOUrl = this.globalVars.baseURL + '/api/ko';\r\n        let params = new HttpParams();\r\n        params = params.append('id', '' + id);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params:  new HttpParams().set('id', '' + id)\r\n            };\r\n\r\n        return this.http.get<KO>(this.globalVars.baseURL + '/api/ko',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<KO>(this.globalVars.baseURL1 + '/api/ko',  httpOptions);\r\n        }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { Linija } from '../models/linija';\r\nimport { Layer } from '../models/layer';\r\nimport { KO } from 'src/models/ko';\r\n\r\n\r\n@Injectable()\r\nexport class LinijeService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    getListaLinija(layer: Layer, ko: number): Observable<Linija[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/linije';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n        .append('layer', '' + layer.id)\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        return this.http.get<Linija[]>(this.globalVars.baseURL + '/layers/linije',  httpOptions)\r\n             .pipe(retry(1), catchError(err => {\r\n                return this.http.get<Linija[]>(this.globalVars.baseURL1 + '/layers/linije',  httpOptions);\r\n             }));\r\n    }\r\n\r\n    pripadaKO(linija: Linija, ko: KO) {\r\n        let res = false;\r\n        const coord = linija.coordinates[0];\r\n        try {\r\n            const rel = Math.abs(coord[0] - ko.centarx) + Math.abs(coord[1] - ko.centary);\r\n            if (ko.idKO === 7) {\r\n                if (rel && (rel < 0.08)) {\r\n                    res = true;\r\n                }\r\n            } else {\r\n                if (rel && rel < 0.04) {\r\n                    res = true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n        return res;\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { MLinija } from '../models/mlinija';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class MLinijeService {\r\nfilterUlica = '';\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) {\r\n\r\n     }\r\n\r\n    getListaMLinija(layer: Layer, ko: number): Observable<MLinija[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/linije';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n        .append('layer', '' + layer.id)\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        return this.http.get<MLinija[]>(this.globalVars.baseURL + '/layers/linije',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<MLinija[]>(this.globalVars.baseURL1 + '/layers/linije',  httpOptions);\r\n         }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Poligon } from '../models/poligon';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { KO } from 'src/models/ko';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class PoligoniService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n\r\n    httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            // tslint:disable-next-line:object-literal-key-quotes\r\n            'Accept': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        })};\r\n\r\n    getListaPoligona(layer: Layer, ko: number): Observable<Poligon[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/poligoni';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n        .append('layer', '' + layer.id)\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Accept: 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        // console.log(JSON.stringify(httpOptions));\r\n\r\n        return this.http.get<Poligon[]>(this.globalVars.baseURL + '/layers/poligoni',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<Poligon[]>(this.globalVars.baseURL1 + '/layers/poligoni',  httpOptions);\r\n         }));\r\n    }\r\n\r\n    pripadaKO(poligon: Poligon, ko: KO) {\r\n        let res = false;\r\n        const coord = poligon.geom.coordinates[0][0];\r\n        try {\r\n            const rel = Math.abs(coord[0] - ko.centarx) + Math.abs(coord[1] - ko.centary);\r\n            if (ko.idKO === 7) {\r\n                if (rel && (rel < 0.08)) {\r\n                    res = true;\r\n                }\r\n            } else {\r\n                if (rel && rel < 0.04) {\r\n                    res = true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n        return res;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Rasveta } from '../models/rasveta';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class RasvetaService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n    getListaRasveteKO(layer: Layer, ko: number): Observable<Rasveta[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/rasveta/listarasvete';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n\r\n        const params = new HttpParams()\r\n        .append('ko', '' + ko)\r\n        .append('searchstring0', searchstring[0])\r\n        .append('searchstring1', searchstring[1])\r\n        .append('searchstring2', searchstring[2]);\r\n\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                Accept: 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n            };\r\n        return this.http.get<Rasveta[]>(this.globalVars.baseURL + '/rasveta/listarasvete',  httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<Rasveta[]>(this.globalVars.baseURL1 + '/layers/listarasvete',  httpOptions);\r\n         }));\r\n    }\r\n\r\n    icon(kol: number, zoom: number): string {\r\n        if (kol == null || kol === 0) {\r\n            if (zoom < 17) {\r\n                return 'assets/icons/black_dot.png';\r\n            } else {\r\n                return 'assets/icons/stub_0.png';\r\n            }\r\n        } else {\r\n            if (zoom < 17) {\r\n                return 'assets/icons/yellow_dot.png';\r\n            } else {\r\n                switch (kol) {\r\n                    case 1:\r\n                        return 'assets/icons/stub_1.png';\r\n                    case 2:\r\n                        return 'assets/icons/stub_2.png';\r\n                    case 3:\r\n                        return 'assets/icons/stub_3.png';\r\n                    case 4:\r\n                        return 'assets/icons/stub_4.png';\r\n                    default:\r\n                        return 'assets/icons/stub_0.png';\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Tacka } from '../models/tacka';\r\nimport { retry } from 'rxjs/operators';\r\nimport { GlobalVars } from './globalVars';\r\nimport { KO } from 'src/models/ko';\r\nimport { Layer } from 'src/models/layer';\r\n\r\n@Injectable()\r\nexport class TackeService {\r\n\r\n    constructor(private http: HttpClient, private globalVars: GlobalVars) { }\r\n    getListaTacaka(layer: Layer, ko: number): Observable<Tacka[]> {\r\n        const listaUrl = this.globalVars.baseURL + '/layers/tacke';\r\n        const searchstring: string[] = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            if (layer && layer.filteri && layer.filteri[i] && layer.filteri[i].searchstring) {\r\n                searchstring[i] = layer.filteri[i].searchstring;\r\n            } else {\r\n                searchstring[i] = '';\r\n            }\r\n        }\r\n        const params = new HttpParams()\r\n            .append('layer', '' + layer.id)\r\n            .append('ko', '' + ko)\r\n            .append('searchstring0', searchstring[0])\r\n            .append('searchstring1', searchstring[1])\r\n            .append('searchstring2', searchstring[2]);\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                // tslint:disable-next-line:object-literal-key-quotes\r\n                'Accept': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n            }),\r\n            params\r\n        };\r\n        return this.http.get<Tacka[]>(this.globalVars.baseURL + '/layers/tacke', httpOptions)\r\n        .pipe(retry(1), catchError(err => {\r\n            return this.http.get<Tacka[]>(this.globalVars.baseURL1 + '/layers/tacke',  httpOptions);\r\n         }));\r\n    }\r\n\r\n    pripadaKO(tacka: Tacka, ko: KO) {\r\n        let res = false;\r\n        try {\r\n            const rel = Math.abs(tacka.geom.coordinates[0] - ko.centarx) + Math.abs(tacka.geom.coordinates[1] - ko.centary);\r\n            if (ko.idKO === 7) {\r\n                if (rel && (rel < 0.08)) {\r\n                    res = true;\r\n                }\r\n            } else {\r\n                if (rel && rel < 0.04) {\r\n                    res = true;\r\n                }\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n        return res;\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}